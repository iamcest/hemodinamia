var d3=require("d3"),convert=require("xml-js");const mag_size=1.9,Graph=require("graphology/build/graphology.min.js"),{pathDataToPolys:pathDataToPolys}=require("svg-path-to-polygons/svg-path-to-polygons.js");import{Background_grid}from"./background_grid.js";import{connectedComponents}from"graphology-components/index.js";var subGraph=require("graphology-utils/subgraph");import shortestPath from"graphology-shortest-path/index.js";import{dijkstra}from"graphology-shortest-path";import{colorbrewer}from"./colorbrewer.js";let brewer_red=colorbrewer.Reds[3],vein_colors=colorbrewer.YlOrBr[6],diverge_color=["blue","cyan","pink","yellow","green","white","black","white","grey","white","darkorchid","darkred"];const start_translate="translate(100px,-35px)",end_translate="translate(0px,0px)";import{Cor_tree_graph,Cor_tree_grafts}from"./coronary_graph.min.js";const get_graph=()=>Cor_tree_graph;import{Gradients}from"./gradients.js";import{toPoints}from"svg-points/dist/svg-points.js";import{textures}from"./textures.min.js";import{symbols}from"./symbols.js";import{natives_template,vessel_lv_territories_aha,segment_colors_aha,lv_segments_data_aha,cor_tree_data}from"./cor_data";const get_cor_tree_data=()=>cor_tree_data,get_segment_colors_aha=()=>segment_colors_aha,get_segments_data_aha=()=>lv_segments_data_aha;import{Segment_property}from"./segment_property.js";let db_lesions_data=new Array;import{Grafts_template,T_grafts_template}from"./grafts_template.min.js";import{LvSegModel}from"./lv_seg_model";import{Cor_dendrogram}from"./cor_dendrogram";const get_db_data=()=>INFO_CORONARY_DATA,get_db_lesions_data=()=>{let db_data,lesions_data;return get_db_data().info_coronary.corLesions},get_db_grafts_data=()=>{let db_data,grafts_db_data;return get_db_data().info_coronary.cathGrafts},get_db_collaterals_data=()=>{let db_data,collat_db_data;return get_db_data().info_coronary.corCollaterals},get_db_anatomy_data=()=>{let db_data,anatomy_db_data;return get_db_data().info_coronary.corAnatomies[0]},get_db_dominance=()=>{let utility=new Utility,db_data=get_db_anatomy_data(),dominance="";return void 0!==db_data&&db_data?dominance=db_data.cor_anat_dominance:(dominance="rca",alert("Please Complete File: Angio Menu -> Anatomy. Some Segments are not going to be drawn"),utility.message("Please Define Coronary Dominance"),dominance)};let g_draw_n_template=new Graph({directed:!0}),draw_n_template=new Array;const get_n_template=()=>natives_template,get_draw_n_template=()=>draw_n_template[0],get_symbols=()=>symbols;let draw_symbols_template=new Array,get_draw_symbols_template=()=>draw_symbols_template,draw_grafts_template=new Array,draw_t_grafts_template=new Array;const get_grafts_template=()=>Grafts_template,get_t_grafts_template=()=>T_grafts_template,get_draw_grafts_template=()=>draw_grafts_template;let get_draw_t_grafts_template=()=>draw_t_grafts_template,draw_collaterals_template=new Array,get_draw_collaterals_template=()=>draw_collaterals_template;class Points2Rect{constructor(){}make(points){let rect_w=15,rect_h=30,rect_x=points[0].x,rect_y=points[0].y}}class Calc_paths{constructor(){this.points2rect=new Points2Rect}construct_element(segment,div_id,start,end,element){let seg_path,n0=d3.select("path#"+div_id).node().getTotalLength()}build_t_graft_points(template,graft,start_path,end_path){let utility=new Utility,p1=utility.path_to_points(start_path),p2=utility.path_to_points(end_path),path_all_points=this.create_points_at_distance(p1,p2),ostial_points=path_all_points.slice(0,3),proximal_points=path_all_points.slice(2,6),mid_points=path_all_points.slice(5,10),distal_points=path_all_points.slice(9,13),distal_anast_points=path_all_points.slice(12,14);return this.insert_t_graft_xy(template,graft,"ostial_graft_x","ostial_graft_y",ostial_points),this.insert_t_graft_xy(template,graft,"proximal_graft_x","proximal_graft_y",proximal_points),this.insert_t_graft_xy(template,graft,"mid_graft_x","mid_graft_y",mid_points),this.insert_t_graft_xy(template,graft,"distal_graft_x","distal_graft_y",distal_points),this.insert_t_graft_xy(template,graft,"distal_anast_graft_x","distal_anast_graft_y",distal_anast_points),path_all_points}insert_t_graft_xy(draw_template,graft,position_x,position_y,points){draw_template.cath_graft_prox_site==graft&&(draw_template[position_x]=points[0].x,draw_template[position_y]=points[0].y)}build_graft_paths(d,graft){let start_div=d.cath_graft_prox_site+"_start",end_div=d.cath_graft_prox_site+"_end",start_path=d3.select("path#"+start_div).node(),n1=start_path.getTotalLength(),p1=start_path.getPointAtLength(.75*n1),end_path=d3.select("path#"+end_div).node(),n2=end_path.getTotalLength(),p2=end_path.getPointAtLength(.6*n2),path_all_points=this.create_points_at_distance(p1,p2),line=d3.line().x(d=>d.x).y(d=>d.y).curve(d3.curveNatural),graft_segement_paths=this.graft_segment_paths(graft,path_all_points),insert_graft_lesions=this.insert_graft_lesions(graft),graft_path;return line(path_all_points)}create_points_at_distance(p1,p2){let distance=Math.sqrt(Math.pow(p2.x-p1.x,2)+Math.pow(p2.y-p1.y,2)),point_at_05=this.find_points(p1.x,p2.x,p1.y,p2.y,.05*distance),point_at_10=this.find_points(p1.x,p2.x,p1.y,p2.y,.1*distance),point_at_20=this.find_points(p1.x,p2.x,p1.y,p2.y,.2*distance),point_at_30=this.find_points(p1.x,p2.x,p1.y,p2.y,.3*distance),point_at_40=this.find_points(p1.x,p2.x,p1.y,p2.y,.4*distance),point_at_50=this.find_points(p1.x,p2.x,p1.y,p2.y,.5*distance),point_at_60=this.find_points(p1.x,p2.x,p1.y,p2.y,.6*distance),point_at_70=this.find_points(p1.x,p2.x,p1.y,p2.y,.7*distance),point_at_75=this.find_points(p1.x,p2.x,p1.y,p2.y,.75*distance),point_at_80=this.find_points(p1.x,p2.x,p1.y,p2.y,.8*distance),point_at_90=this.find_points(p1.x,p2.x,p1.y,p2.y,.9*distance),point_at_95=this.find_points(p1.x,p2.x,p1.y,p2.y,.95*distance),path_all_points;return[{x:p1.x,y:p1.y},{x:point_at_05.x-4,y:point_at_05.y-2},{x:point_at_10.x+8,y:point_at_10.y-2},{x:point_at_20.x+12,y:point_at_20.y-1},{x:point_at_30.x+10,y:point_at_30.y-2},{x:point_at_40.x+5,y:point_at_40.y-2},{x:point_at_50.x+4,y:point_at_50.y-1},{x:point_at_60.x-3,y:point_at_60.y-1},{x:point_at_70.x+4,y:point_at_70.y-1},{x:point_at_75.x+0,y:point_at_75.y-2},{x:point_at_80.x+0,y:point_at_80.y-1},{x:point_at_90.x+2,y:point_at_90.y-1},{x:point_at_95.x-3,y:point_at_95.y-1},{x:p2.x,y:p2.y}]}find_points(p1_x,p2_x,p1_y,p2_y,at_distance){let angle=Math.atan2(p2_y-p1_y,p2_x-p1_x),sin,cos,p_y=p1_y+Math.sin(angle)*at_distance,p_x=p1_x+Math.cos(angle)*at_distance,a_point=new Array;return a_point={x:p_x,y:p_y}}insert_graft_lesions(graft){let db_graft_data=get_db_grafts_data(),grafts_template=get_draw_grafts_template();for(let i=0;i<db_graft_data.length;i++){let db_graft_data_i=db_graft_data[i];for(let j=0;j<grafts_template.length;j++){let graft_template_j=grafts_template[j];db_graft_data_i.cath_graft_prox_site==graft_template_j.cath_graft_prox_site&&(graft_template_j.graft_ostial_sten_pct=db_graft_data_i.graft_ostial_sten_pct,graft_template_j.graft_prox_sten_pct=db_graft_data_i.graft_prox_sten_pct,graft_template_j.graft_mid_sten_pct=db_graft_data_i.graft_mid_sten_pct,graft_template_j.graft_dist_sten_pct=db_graft_data_i.graft_dist_sten_pct,graft_template_j.graft_dist_anast_sten_pct=db_graft_data_i.graft_dist_anast_sten_pct)}}}graft_segment_paths(graft,path_all_points){let ostial_points=path_all_points.slice(0,3),proximal_points=path_all_points.slice(2,6),mid_points=path_all_points.slice(5,10),distal_points=path_all_points.slice(9,13),distal_anast_points=path_all_points.slice(12,14),t_origin_points=path_all_points.slice(3,4),graft_lesions_line=d3.line().x((function(d){return d.x})).y((function(d){return d.y})).curve(d3.curveNatural),ostial_path=graft_lesions_line(ostial_points),proximal_path=graft_lesions_line(proximal_points),mid_path=graft_lesions_line(mid_points),distal_path=graft_lesions_line(distal_points),distal_anast_path=graft_lesions_line(distal_anast_points),t_origin_path=graft_lesions_line(t_origin_points);this.insert_graft_xy(graft,"ostial_graft_x","ostial_graft_y",ostial_points),this.insert_graft_xy(graft,"proximal_graft_x","proximal_graft_y",proximal_points),this.insert_graft_xy(graft,"mid_graft_x","mid_graft_y",mid_points),this.insert_graft_xy(graft,"distal_graft_x","distal_graft_y",distal_points),this.insert_graft_xy(graft,"distal_anast_graft_x","distal_anast_graft_y",distal_anast_points),this.insert_graft_xy(graft,"t_graft_origin_x","t_graft_origin_x",t_origin_points),this.insert_graft_path(graft,"ostial_path",ostial_path),this.insert_graft_path(graft,"proximal_path",proximal_path),this.insert_graft_path(graft,"mid_path",mid_path),this.insert_graft_path(graft,"distal_path",distal_path),this.insert_graft_path(graft,"distal_anast_path",distal_anast_path),this.insert_graft_path(graft,"t_graft_origin_path",t_origin_path),this.insert_t_graft_origin_path(graft,"t_graft_origin_path",t_origin_path)}insert_graft_xy(graft,position_x,position_y,points){let draw_template=get_draw_grafts_template();for(let i=0;i<draw_template.length;i++){this.points2rect.make(points);let draw_template_i=draw_template[i];draw_template_i.cath_graft_prox_site==graft&&(draw_template_i[position_x]=points[0].x,draw_template_i[position_y]=points[0].y)}}insert_t_graft_origin_path(graft,seg_path,path){let g,template=(new Cor_tree_grafts).set_graph(),node_exists;!0===template.hasNode(graft)&&template.setNodeAttribute(graft,"t_graft_origin_path",path)}insert_graft_path(graft,seg_path,path){let draw_template=get_draw_grafts_template();for(let i=0;i<draw_template.length;i++){let draw_template_i=draw_template[i];draw_template_i.cath_graft_prox_site==graft&&(draw_template_i[seg_path]=path)}}}export class Interface_buttons{constructor(){this.make_button();let info_coronary_data=INFO_CORONARY_DATA;this.guides=new Guides,this.bullets_group=this.guides.make_bullets(this.vis)}make_button(){let button=document.createElement("button");button.innerHTML="Show  - Redraw Cor Tree",button.classList.add("is-small"),button.classList.add("is-primary"),button.classList.add("button");let draw_div=document.querySelector("#draw_info_coronary_button_div");null!==draw_div&&(draw_div.appendChild(button),button.addEventListener("click",(function(){let main_svg;if(null!==d3.select("#main_svg")){d3.select("#main_svg").transition().duration(1500).ease(d3.easeLinear).style("fill","#000").attr("opacity",d=>.1).remove(),g_draw_n_template.clear(),draw_symbols_template.length=0;let setup,vis=(new Set_sketch).vis(),paths=new Main_tree(vis)}})));let d_button=document.createElement("button"),draw_div_d_button;d_button.innerHTML="Show  - Cor Dendrogram",d_button.classList.add("is-small"),d_button.classList.add("is-success"),d_button.classList.add("button"),null!==document.querySelector("#draw_info_coronary_button_div")&&(draw_div.appendChild(d_button),d_button.addEventListener("click",(function(){let dendro;(new Show_dendrogram).show_dendrogram()})))}}class Show_dendrogram{constructor(){}show_dendrogram(){let main_svg;d3.select("#main_svg").remove();let setup,vis=(new Set_sketch).vis(),guides,bullets_group=(new Guides).make_bullets(vis),draw_n_template=get_draw_n_template(),data2draw=g_draw_n_template.export(),draw_graft_template=get_draw_grafts_template(),cor_dendrogram=new Cor_dendrogram(bullets_group,data2draw,draw_graft_template)}}class Draw_natives{constructor(d3){this.d3=d3,this.property=new Segment_property(this.d3),this.utility=new Utility,this.g=new Cor_tree_graph}make(bullets_group){let patient_data=[],all_graph_data=g_draw_n_template.export();for(let i=0;i<all_graph_data.nodes.length;i++)patient_data.push(all_graph_data.nodes[i].attributes);this.data=patient_data,this.lesion=new Native_lesions;let vessel_group,group_enter=bullets_group.append("g").selectAll("g").attr("id","vessel_group").data(this.data).enter().append("g").attr("id","native_group_enter"),line=d3.line().x((function(d){return d.x})).y((function(d){return d.y})).curve(d3.curveNatural),paths=group_enter.append("path").attr("id",d=>this.dom+"_"+d.id).attr("class",(d,i)=>"native").attr("d",d=>{let all_points=this.utility.path_to_all_points(d.path),natives_path;return line(all_points)}).attr("stroke-width",d=>d.size*mag_size*1.1).style("stroke",d=>"Y"==d.is_variant?"url(#variant_gradient)":"url(#vessel_gradient)").style("stroke-linecap","round").style("stroke-join","round").style("fill","none").attr("opacity",d=>.9),over=group_enter.on("mouseover",d=>{d3.select("#"+this.dom+"_"+d.id).transition().duration(1500).attr("stroke-width",d=>d.size*mag_size*1.5).style("stroke","url(#symbol_gradient)").attr("cursor","pointer")}),out=group_enter.on("mouseout",d=>{d3.select("#"+this.dom+"_"+d.id).transition().duration(1500).attr("stroke-width",d=>d.size*mag_size*1.1).style("stroke","url(#vessel_gradient)").attr("cursor","default")}),over_2=group_enter.on("mouseenter",(d,i)=>{d3.select("#"+this.dom+"_"+d.id).attr("cursor","pointer"),this.find_lv_segments_2(this.data,d.id)}),natives_title,natives_title_text=this.property.title(group_enter).text(d=>d.cor_les_pct+" %  "+d.id+" : "+d.description_name+" : "+d.seg_def)}find_lv_segments(patient_data,id){let graph=this.g.set_graph();for(let i=0;i<patient_data.length;i++){let native=patient_data[i];graph.forEachNode((native,attributes)=>{let group_aha=attributes.vessel_group_aha,native_id;if(attributes.id==id)for(let j=0;j<vessel_lv_territories_aha.length;j++){let lv_t_group=vessel_lv_territories_aha[j];lv_t_group.vessel_group_aha==group_aha&&this.color_lv_segments(lv_t_group)}})}}find_lv_segments_2(patient_data,id){let seg_data=get_segments_data_aha();for(let i=0;i<patient_data.length;i++){let native=patient_data[i];for(let j=0;j<seg_data.length;j++)id==seg_data[j].vessels&&this.color_lv_segments_2(seg_data[j].id)}}color_lv_segments_2(id){d3.selectAll("#arc_path_"+id).transition().duration(2500).style("opacity",.9).style("fill","#AD5CFF").transition().delay(1e3).duration(200).ease(d3.easeLinear).style("opacity",.9).style("fill","#000").attr("stroke","gray").attr("stroke-width",1.5)}color_lv_segments(lv_segments){let color=get_segment_colors_aha(),primary=lv_segments.primary,secondary=lv_segments.secondary,tertiary=lv_segments.tertiary;for(let i=0;i<primary.length;i++){let p=primary[i];d3.select("#arc_"+p).transition().duration(500).style("fill","#d7191c")}for(let i=0;i<secondary.length;i++){let s=secondary[i];d3.select("#arc_"+s).transition().duration(1e3).style("fill","#fdae61")}for(let i=0;i<tertiary.length;i++){let t=tertiary[i];d3.select("#arc_"+t).transition().duration(1500).style("fill","#abdda4")}}get_paths_from_n_template(d){return d.path}}class Prepare_collaterals_data{constructor(){this.draw_n_template=get_draw_n_template(),this.utility=new Utility,this.calc=new Calc_paths,this.g=new Cor_tree_graph}make_col_paths(){let db_col_data=get_db_collaterals_data(),graph=this.g.set_graph();for(let i=0;i<db_col_data.length;i++){let start_end={donor_name:"",donor_path:"",recipient_name:"",recipient_path:"",collateral_path:"",donor_x:"",donor_y:""},db_col_i=db_col_data[i],db_donor=db_col_i.collat_donor_seg,db_recipient=db_col_i.collat_recipient_seg,attr_donor=graph.getNodeAttributes(db_donor),donor_path=attr_donor.path,donor_name=attr_donor.id;start_end.donor_name=donor_name,start_end.donor_path=donor_path;let attr_recipient=graph.getNodeAttributes(db_recipient),recipient_path=attr_recipient.path,recipient_name=attr_recipient.id;start_end.recipient_name=recipient_name,start_end.recipient_path=recipient_path;let collateral_points=this.make_col_points(donor_path,recipient_path),line,collateral_path=d3.line().x(d=>d.x).y(d=>d.y).curve(d3.curveNatural)(collateral_points);start_end.collateral_path=collateral_path;let reverse_collat,donor_xy=collateral_points.reverse().pop(),donor_x=donor_xy.x,donor_y=donor_xy.y;start_end.donor_x=donor_x,start_end.donor_y=donor_y,draw_collaterals_template.push(start_end)}}make_col_points(donor_path,recipient_path){let p1_d=this.utility.path_to_all_points(donor_path),p2_r=this.utility.path_to_all_points(recipient_path),p1=p1_d.pop(),p2=p2_r.pop(),all_points;return this.calc.create_points_at_distance(p1,p2)}draw_collaterals(bullets_group){let draw_template=get_draw_collaterals_template(),collat_group,collat_group_enter=bullets_group.append("g").selectAll("g").attr("id","collateral_group").data(draw_template).enter().append("g").attr("id",d=>d.donor_name+"_"+d.recipient_name+"enter"),collat_paths=collat_group_enter.append("path").attr("id",d=>d.donor_name+d.recipient_name).attr("d",d=>{let collateral_path;if(""!==d.collateral_path)return d.collateral_path}).attr("stroke-width",d=>1.4*mag_size).style("stroke","url(#collateral_gradient)").style("fill","none").style("stroke-linecap","round").style("stroke-join","bevel").attr("opacity",d=>.6).attr("cursor","pointer").append("title").text(d=>" Collateral From: "+d.donor_name+" To: "+d.recipient_name),indicator=collat_group_enter.append("circle").attr("cx",0).attr("cy",0).attr("r",2*mag_size,5).style("stroke-width",1.1*mag_size).style("stroke","#fdae6b").style("fill",d=>"#fee6ce").attr("transform",(d,i)=>{if(""!==d.donor_x){let x,y,rotate;return"translate("+d.donor_x+","+d.donor_y+")scale(1.1)rotate("+0+")"}}).style("opacity",.4),on_collateral_over=collat_group_enter.on("mouseover",d=>{d3.select("#"+d.donor_name+d.recipient_name).transition().duration(1500).attr("opacity",d=>.9).attr("stroke-width",d=>2.8*mag_size).style("stroke","red").transition().attr("stroke-width",d=>1.4*mag_size).style("stroke","url(#collateral_gradient)").style("fill","none").attr("opacity",d=>.6)})}}class Prepare_natives_variants{constructor(){this.utility=new Utility,this.db_anatomy_data=get_db_anatomy_data(),this.db_data=get_db_data(),this.db_lesion_data=get_db_lesions_data(),this.g=new Cor_tree_graph}set_variant_segment(field,normal_segment){let graph=this.g.set_graph(),a_variant=this.db_anatomy_data[field];if("undefined"==a_variant||null==a_variant){let default_variant=normal_segment,d_node;return graph.getNodeAttributes(default_variant)}if(0!==this.db_lesion_data.length&&null!==this.db_lesion_data.length)for(let i=0;i<this.db_lesion_data.length;i++){let d_i=this.db_lesion_data[i],a_node;return graph.getNodeAttributes(a_variant)}}add_variants(){let lm_ostium_data=this.set_variant_segment("cor_anat_lm_ostium_type","lm_ostium");g_draw_n_template.addNode(lm_ostium_data.id,lm_ostium_data);let lad_ostium_data=this.set_variant_segment("cor_anat_lad_ostium_type","lad_ostium");g_draw_n_template.addNode(lad_ostium_data.id,lad_ostium_data);let lad_prox_data=this.set_variant_segment("or_anat_lad_prox_type","lad_prox");g_draw_n_template.addNode(lad_prox_data.id,lad_prox_data);let lad_septal_data=this.set_variant_segment("cor_anat_septal_ostium_type","lad_septal");g_draw_n_template.addNode(lad_septal_data.id,lad_septal_data);let lad_d3_data=this.set_variant_segment("cor_anat_lad_d3_type","lad_d3");g_draw_n_template.addNode(lad_d3_data.id,lad_d3_data);let lad_distal_data=this.set_variant_segment("cor_anat_lad_distal_type","lad_distal");g_draw_n_template.addNode(lad_distal_data.id,lad_distal_data);let ramus_data=this.set_variant_segment("cor_anat_ramus_type","ramus");g_draw_n_template.addNode(ramus_data.id,ramus_data);let ostial_rca_data=this.set_variant_segment("cor_anat_rca_ostium_type","rca_ostium");g_draw_n_template.addNode(ostial_rca_data.id,ostial_rca_data);let rca_conus_data=this.set_variant_segment("cor_anat_conus_type","rca_conus");g_draw_n_template.addNode(rca_conus_data.id,rca_conus_data);let rca_v_branch_data=this.set_variant_segment("cor_anat_rca_rv_branch_type","rca_v_branch_normal");g_draw_n_template.addNode(rca_v_branch_data.id,rca_v_branch_data);let rca_sa_data=this.set_variant_segment("cor_anat_sino_atrial_type","rca_sa");g_draw_n_template.addNode(rca_sa_data.id,rca_sa_data);let distal_rca_pda_data=this.set_variant_segment("cor_anat_rca_pda_type","rca_pda");g_draw_n_template.addNode(distal_rca_pda_data.id,distal_rca_pda_data);let ostial_lcx_data=this.set_variant_segment("cor_anat_lcx_ostium_type","lcx_ostium");g_draw_n_template.addNode(ostial_lcx_data.id,ostial_lcx_data)}set_defaults(){let graph=this.g.set_graph(),lm_default="lm_ostium",lm_attributes=graph.getNodeAttributes(lm_default);g_draw_n_template.addNode(lm_attributes.id,lm_attributes);let lad_ostium_default="lad_ostium",lad_ostium_attributes=graph.getNodeAttributes("lad_ostium");g_draw_n_template.addNode(lad_ostium_attributes.id,lad_ostium_attributes);let lad_prox_default="lad_prox",lad_prox_attributes=graph.getNodeAttributes("lad_prox");g_draw_n_template.addNode(lad_prox_attributes.id,lad_prox_attributes);let lad_septal_default="lad_septal",lad_septal_attributes=graph.getNodeAttributes("lad_septal");g_draw_n_template.addNode(lad_septal_attributes.id,lad_septal_attributes);let ramus_default="ramus",ramus_attributes=graph.getNodeAttributes("ramus");g_draw_n_template.addNode(ramus_attributes.id,ramus_attributes);let distal_lad_default="lad_distal_type_ii",distal_lad_attributes=graph.getNodeAttributes(distal_lad_default);g_draw_n_template.addNode(distal_lad_attributes.id,distal_lad_attributes);let ostial_rca_default="rca_ostium",ostial_rca_attributes=graph.getNodeAttributes("rca_ostium");g_draw_n_template.addNode(ostial_rca_attributes.id,ostial_rca_attributes);let rca_conus_default="rca_conus",rca_conus_attributes=graph.getNodeAttributes("rca_conus");g_draw_n_template.addNode(rca_conus_attributes.id,rca_conus_attributes);let sino_atrial_default="rca_sa",sino_atrial_attributes=graph.getNodeAttributes("rca_sa");g_draw_n_template.addNode(sino_atrial_attributes.id,sino_atrial_attributes);let distal_rca_pda_default="rca_pda",distal_rca_pda_attributes=graph.getNodeAttributes("rca_pda");g_draw_n_template.addNode(distal_rca_pda_attributes.id,distal_rca_pda_attributes);let ostial_lcx_default="lcx_ostium",ostial_lcx_attributes=graph.getNodeAttributes("lcx_ostium");g_draw_n_template.addNode(ostial_lcx_attributes.id,ostial_lcx_attributes)}}class Prepare_natives_data{constructor(){this.utility=new Utility,this.variant=new Prepare_natives_variants,this.g=new Cor_tree_graph}set_lesions(){let db_les_data=get_db_lesions_data();for(let i=0;i<db_les_data.length;i++){let les_data=db_les_data[i],les_data_cdisc=les_data.cor_les_seg_cdisc;g_draw_n_template.setNodeAttribute(les_data_cdisc,"cor_les_thrombus_yn",les_data.cor_les_thrombus_yn),g_draw_n_template.setNodeAttribute(les_data_cdisc,"cor_les_calcium_yn",les_data.cor_les_calcium_yn),g_draw_n_template.setNodeAttribute(les_data_cdisc,"cor_les_aneurysm_yn",les_data.cor_les_aneurysm_yn),g_draw_n_template.setNodeAttribute(les_data_cdisc,"cor_les_prior_stent_yn",les_data.cor_les_prior_stent_yn),g_draw_n_template.setNodeAttribute(les_data_cdisc,"cor_les_pct",les_data.cor_les_pct)}}set_graph_x_y(){g_draw_n_template.forEachNode((node,attributes)=>{this.insert_graph_x_y(node)})}insert_graph_x_y(node){let lesion_path=g_draw_n_template.getNodeAttribute(node,"lesion_path"),lesion_exists=g_draw_n_template.hasNodeAttribute(node,"lesion_path");if(""!==lesion_path&&1==lesion_exists){let lesion_points=this.utility.path_to_points(lesion_path),lesion_p_x=lesion_points.x,lesion_p_y=lesion_points.y;g_draw_n_template.setNodeAttribute(node,"lesion_x",lesion_p_x),g_draw_n_template.setNodeAttribute(node,"lesion_y",lesion_p_y)}let stent_path=g_draw_n_template.getNodeAttribute(node,"stent_path"),stent_exists=g_draw_n_template.hasNodeAttribute(node,"stent_path");if(""!==stent_path&&1==stent_exists){let stent_points=this.utility.path_to_points(stent_path),stent_p_x=stent_points.x,stent_p_y=stent_points.y;g_draw_n_template.setNodeAttribute(node,"stent_x",stent_p_x),g_draw_n_template.setNodeAttribute(node,"stent_y",stent_p_y)}let graft_path=g_draw_n_template.getNodeAttribute(node,"graft_path"),graft_exists=g_draw_n_template.hasNodeAttribute(node,"graft_path");if(""!==graft_path&&1==graft_path){let graft_points=this.utility.path_to_points(graft_path),graft_p_x=graft_points.x,graft_p_y=graft_points.y;g_draw_n_template.setNodeAttribute(node,"graft_x",graft_p_x),g_draw_n_template.setNodeAttribute(node,"graft_y",graft_p_y)}}make_draw_natives_template(){let dominance=get_db_dominance(),graph;this.g.set_graph().forEachNode((node,attributes)=>{let lcx_dom_draw=attributes.lcx_dom_draw,rca_dom_draw=attributes.rca_dom_draw,balanced_dom_draw=attributes.balanced_dom_draw,default_draw=attributes.default_draw;switch(dominance){case"rca":"Y"==rca_dom_draw&&g_draw_n_template.addNode(node,attributes);break;case"left":"Y"==lcx_dom_draw&&g_draw_n_template.addNode(node,attributes);break;case"balanced":"Y"==balanced_dom_draw&&g_draw_n_template.addNode(node,attributes);break;case"default":"Y"==default_draw&&g_draw_n_template.addNode(node,attributes);break;case"":console.log("Somthing wrong")}});let db_anatomy_data=get_db_anatomy_data();void 0!==db_anatomy_data&&db_anatomy_data?this.variant.add_variants():this.variant.set_defaults()}}class Native_lesions{constructor(d3){this.d3=d3,this.prepare_data=new Prepare_natives_data,this.utility=new Utility,this.g=new Cor_tree_graph}draw_lesions(group){let lesions_data=[],all_graph_data=g_draw_n_template.export();for(let i=0;i<all_graph_data.nodes.length;i++)if(""!==all_graph_data.nodes[i].attributes.cor_les_pct){let node_id=all_graph_data.nodes[i].attributes.id,node_attr=g_draw_n_template.getNodeAttributes(node_id);lesions_data.push(node_attr)}let lesions_group,lesions_group_enter=group.append("g").selectAll("g").attr("id","lesions_group").data(lesions_data).enter().append("g").attr("id",d=>d.id+"_lesions_group_enter"),percent_scale=d3.scaleLinear().domain([0,100]).range([0,6]),lesion_drop=lesions_group_enter.append("circle").attr("cx","10px").attr("cy","10px").attr("r",d=>d.size*mag_size*1.2).attr("id",d=>d.id+"_lesion_drop").style("stroke-width","1px").style("stroke","red").style("fill","url(#lesion_gradient)").attr("transform",(d,i)=>{if(void 0!==d.lesion_x&&d.lesion_x){let l_x=d.lesion_x,l_y=d.lesion_y,point=this.utility.circumference_point(l_x,l_y,1),x,y,rotate;return"translate("+point.x+","+point.y+")scale(1)rotate("+1+")"}}).attr("opacity",d=>.8).attr("cursor","pointer").append("title").text(d=>" Lesion in : "+d.description_name+" "+d.cor_les_pct+" (%) "),lesion_pct_text=lesions_group_enter.append("text").attr("dx","25px").attr("dy","5px").attr("fill","#fff").attr("text-anchor","start").style("font-family","sans, georgia, times").style("font-size","0.80em").style("font-weight","normal").style("opacity","0.8").style("stroke","none").attr("transform",(d,i)=>{if(""!==d.lesion_x){let x,y;return"translate("+(d.lesion_x-10)+","+(d.lesion_y+10)+")scale(1)rotate(5)"}}).attr("cursor","pointer").text(d=>d.cor_les_pct+"(%)")}}class Prepare_symbols_data{constructor(){}set_data(){let thrombus_data=this.make_symbol_data("cor_les_thrombus_yn","thrombus","Segment With Thrombus"),calcium_data=this.make_symbol_data("cor_les_calcium_yn","calcium","Calcified Region"),interv_data=this.make_symbol_data("cor_les_prior_stent_yn","prior_intervention","Segment With Prior Intervention"),irregular_data=this.make_symbol_data("irregular_yn","irregular","Segment With Irregularities")}find_symbol_path(symbol_name){let symbols=get_symbols();for(let i=0;i<symbols.length;i++){let symbol_i=symbols[i];if(symbol_i.id==symbol_name){let symbol_path;return symbol_i.path}}}make_symbol_data(characteristic,symbol_name,description){let all_graph_data=g_draw_n_template.export();for(let i=0;i<all_graph_data.nodes.length;i++)if(1==all_graph_data.nodes[i].attributes[characteristic]){let node_id=all_graph_data.nodes[i].attributes.id,node_lesion_x=all_graph_data.nodes[i].attributes.lesion_x,node_lesion_y=all_graph_data.nodes[i].attributes.lesion_y,node_attr=g_draw_n_template.getNodeAttributes(node_id),symbol_path,symbol_data={id:node_id,path:this.find_symbol_path(symbol_name),symbol:symbol_name,description:description,lesion_x:node_lesion_x,lesion_y:node_lesion_y};draw_symbols_template.push(symbol_data)}}}class Draw_grafts{constructor(){this.utility=new Utility,this.calc=new Calc_paths}show_grafts(bullets_group){let graft_data=get_draw_grafts_template(),graft_group,graft_group_enter=bullets_group.append("g").selectAll("g").attr("id","graft_group").data(graft_data).enter().append("g").attr("id","graft_group_enter"),graft_paths_start=graft_group_enter.append("path").attr("id",d=>d.cath_graft_prox_site+"_start").attr("d",d=>{let prox_path;if(""!==d.prox_path)return d.prox_path}).attr("stroke-width",d=>d.size*mag_size*1.3).style("stroke","#8dd3c7").style("fill","none").style("stroke-linecap","squere").style("stroke-join","bevel").attr("opacity",d=>.8),graft_paths_end=graft_group_enter.append("path").attr("id",d=>d.cath_graft_prox_site+"_end").attr("d",d=>{let path;return d.distal_anast_path}).attr("stroke-width",d=>d.size*mag_size*1.3).style("stroke","#8dd3c7").style("fill","none").style("stroke-linecap","squere").style("stroke-join","bevel").attr("opacity",d=>.8),graft_paths=graft_group_enter.append("path").attr("id",d=>d.cath_graft_prox_site+"_graft_paths").attr("d",d=>{let graft=d.cath_graft_prox_site,path;return this.calc.build_graft_paths(d,graft)}).attr("stroke-width",d=>d.size*mag_size*.7).style("stroke","url(#vessel_gradient)").style("fill","none").style("stroke-linecap","round").style("stroke-join","round").attr("opacity",d=>.6).attr("cursor","pointer").append("title").text(d=>" Graft From: "+d.proximal_site+" To: "+d.cath_graft_segments_cdisc+" Type: "+d.cath_graft_conduit_type),over=graft_group_enter.on("mouseover",d=>{d3.select("#"+d.cath_graft_prox_site+"_graft_paths").transition().duration(1500).attr("opacity",d=>.9).attr("stroke-width",d=>d.size*mag_size).style("stroke","url(#symbol_gradient)").attr("cursor","pointer")}),out=graft_group_enter.on("mouseout",d=>{d3.select("#"+d.cath_graft_prox_site+"_graft_paths").transition().attr("opacity",d=>.6).duration(500).attr("stroke-width",d=>d.size).style("stroke","url(#vessel_gradient)").attr("cursor","default")}),translate_interpolator=d3.interpolateString(start_translate,end_translate),over_graft_click=graft_group_enter.on("click",d=>{d3.select(this).transition().duration(5500).ease("elastic").attr("stroke-width",d=>1*d.size).style("stroke","white").attr("transform",(d,i)=>"translate(0,"+50*i*2+")scale(2)rotate(5)")})}show_graft_segments(bullets_group){let c10=d3.scaleOrdinal(d3.schemeCategory10),graft_data=get_draw_grafts_template(),graft_group,graft_group_enter=bullets_group.append("g").selectAll("g").attr("id","graft_group").data(graft_data).enter().append("g").attr("id","graft_group_enter"),ostial_mark=graft_group_enter.append("ellipse").attr("cx",d=>d.ostial_graft_x).attr("cy",d=>d.ostial_graft_y).attr("rx",d=>d.size*mag_size*2).attr("ry",d=>d.size*mag_size*.3).attr("fill","none").attr("stroke",c10(1)).attr("stroke-widh",d=>d.size*mag_size*.9).attr("opacity",.9).attr("cursor","pointer").append("title").text(d=>" Graft Segment: Start Of OSTIAL"),prox_mark=graft_group_enter.append("ellipse").attr("cx",d=>d.proximal_graft_x).attr("cy",d=>d.proximal_graft_y).attr("rx",d=>d.size*mag_size*2.5).attr("ry",d=>d.size*mag_size*.3).attr("fill","none").attr("stroke",c10(2)).attr("stroke-widh",d=>d.size*mag_size*.5).attr("opacity",.9).attr("cursor","pointer").append("title").text(d=>" Graft Segment: Start Of PROXIMAL 1/3 of Graft Lenght"),mid_mark=graft_group_enter.append("ellipse").attr("cx",d=>d.mid_graft_x).attr("cy",d=>d.mid_graft_y).attr("rx",d=>d.size*mag_size*2.5).attr("ry",d=>d.size*mag_size*.3).attr("fill","none").attr("stroke",c10(3)).attr("stroke-widh",d=>d.size*mag_size*.5).attr("opacity",.9).attr("cursor","pointer").append("title").text(d=>" Graft Segment: Start Of MID 1/3 of Graft Lenght"),distal_mark=graft_group_enter.append("ellipse").attr("id",d=>{d.id}).attr("cx",d=>d.distal_graft_x).attr("cy",d=>d.distal_graft_y).attr("rx",d=>d.size*mag_size*2.5).attr("ry",d=>d.size*mag_size*.3).attr("fill","none").attr("stroke","none").attr("stroke-widh",d=>d.size*mag_size*.5).attr("opacity",.9).attr("cursor","pointer").append("title").text(d=>" Graft Segment: Start DISTAL 1/3 of Graft Lenght"),distal_mark_over=graft_group_enter.on("mouseover",d=>{d3.select("#distal_mark_"+d.id).transition().duration(1500).attr("stroke-width",d=>d.size*mag_size*1.8).style("stroke","#8dd3c7").attr("cursor","pointer")}),distal_anast_mark=graft_group_enter.append("ellipse").attr("cx",d=>d.distal_anast_graft_x).attr("cy",d=>d.distal_anast_graft_y).attr("rx",d=>d.size*mag_size*2.5).attr("ry",d=>d.size*mag_size*.3).attr("fill","none").attr("stroke",c10(6)).attr("stroke-widh",d=>d.size*mag_size*.5).attr("opacity",.7).attr("cursor","pointer").append("title").text(d=>" Graft Segment: The DISTAL ANASTOMOTIC POSITION")}show_graft_lesions(bullets_group){let c10=d3.scaleOrdinal(d3.schemeCategory10),graft_lesions_data=get_draw_grafts_template(),graft_lesion_group,graft_lesion_group_enter=bullets_group.append("g").selectAll("g").attr("id","graft_lesions_group").data(graft_lesions_data).enter().append("g").attr("id","graft_lesion_group_enter"),graft_ostial_lesion_pct_text=graft_lesion_group_enter.append("text").attr("dx","15px").attr("dy","15px").attr("fill",d=>{let pct;return parseInt(d.graft_ostial_sten_pct,10)>50?"#fff":"#939393 "}).attr("x",d=>d.ostial_graft_x).attr("y",d=>d.ostial_graft_y).attr("text-anchor","start").style("font-family","sans, georgia, times").style("font-size","0.85em").style("font-weight","normal").style("opacity","0.7").style("stroke","none").text(d=>{if(void 0!==d.graft_ostial_sten_pct&&d.graft_ostial_sten_pct)return d.graft_ostial_sten_pct+" %"}).style("opacity",.7),graft_ostial_lesion_drop=graft_lesion_group_enter.append("circle").attr("cx",10).attr("cy",10).attr("r",d=>d.size*mag_size*.5).style("stroke-width",1).style("stroke",d=>{let position=d.graft_ostial_sten_pct,stroke;return this.utility.graft_lesion_stroke(position)}).style("fill",d=>{let position=d.graft_ostial_sten_pct,fill;return this.utility.graft_lesion_fill(position)}).attr("transform",(d,i)=>{if(""!==d.ostialgraft_x){let x,y,rotate;return"translate("+(d.ostial_graft_x+d.size*mag_size*1.4)+","+d.ostial_graft_y+")scale(1.5)rotate("+90+")"}}).attr("opacity",d=>void 0!==d.graft_ostial_sten_pct&&d.graft_ostial_sten_pct?.7:0).append("title").text(d=>" Lesion in Proximal: "+d.proximal_site),graft_prox_lesion_pct_text=graft_lesion_group_enter.append("text").attr("dx","15px").attr("dy","15px").attr("fill",d=>{let pct;return parseInt(d.graft_prox_sten_pct,10)>50?"#fff":"#939393"}).attr("x",d=>d.proximal_graft_x).attr("y",d=>d.proximal_graft_y).attr("text-anchor","start").style("font-family","sans, georgia, times").style("font-size","0.85em").style("font-weight","normal").style("opacity","0.7").style("stroke","none").text(d=>{if(void 0!==d.graft_prox_sten_pct&&d.graft_prox_sten_pct)return d.graft_prox_sten_pct+" %"}),graft_prox_lesion_drop=graft_lesion_group_enter.append("circle").attr("cx",10).attr("cy",10).attr("r",d=>d.size*mag_size*.5).style("stroke-width",1).style("stroke",d=>{let position=d.graft_prox_sten_pct,stroke;return this.utility.graft_lesion_stroke(position)}).style("fill",d=>{let position=d.graft_prox_sten_pct,fill;return this.utility.graft_lesion_fill(position)}).attr("transform",(d,i)=>{if(""!==d.proximal_graft_x){let x,y,rotate;return"translate("+(d.proximal_graft_x+d.size*mag_size*1.4)+","+d.proximal_graft_y+")scale(1.5)rotate("+90+")"}}).attr("opacity",d=>void 0!==d.graft_prox_sten_pct&&d.graft_prox_sten_pct?.7:0).attr("cursor","pointer").append("title").text(d=>" Lesion In Graft : "+d.proximal_site),graft_mid_lesion_pct_text=graft_lesion_group_enter.append("text").attr("dx","15px").attr("dy","15px").attr("fill",d=>{let pct;return parseInt(d.graft_mid_sten_pct,10)>50?"#fff":"#939393"}).attr("x",d=>d.mid_graft_x).attr("y",d=>d.mid_graft_y).attr("text-anchor","start").style("font-family","sans, georgia, times").style("font-size","0.85em").style("font-weight","normal").style("opacity","0. 7").style("stroke","none").text(d=>{if(void 0!==d.graft_mid_sten_pct&&d.graft_mid_sten_pct)return d.graft_mid_sten_pct+" %"}),graft_mid_lesion_drop=graft_lesion_group_enter.append("circle").attr("cx",10).attr("cy",10).attr("r",d=>d.size*mag_size*.5).style("stroke-width",1).style("stroke",d=>{let position=d.graft_mid_sten_pct,stroke;return this.utility.graft_lesion_stroke(position)}).style("fill",d=>{let position=d.graft_mid_sten_pct,fill;return this.utility.graft_lesion_fill(position)}).attr("transform",(d,i)=>{if(""!==d.mid_graft_x){let x,y,rotate;return"translate("+(d.mid_graft_x+d.size*mag_size*1.4)+","+d.mid_graft_y+")scale(1.5)rotate("+90+")"}}).attr("opacity",d=>void 0!==d.graft_mid_sten_pct&&d.graft_mid_sten_pct?.7:0).attr("cursor","pointer").append("title").text(d=>" Lesion in Mid Graft : "+d.proximal_site).text(d=>{if(void 0!==d.graft_mid_sten_pct&&d.graft_mid_sten_pct)return d.graft_mid_sten_pct+" %"}),graft_distal_lesion_pct_text=graft_lesion_group_enter.append("text").attr("dx","15px").attr("dy","15px").attr("fill",d=>{let pct;return parseInt(d.graft_dist_sten_pct,10)>50?"#fff":"#939393 "}).attr("x",d=>d.distal_graft_x).attr("y",d=>d.distal_graft_y).attr("text-anchor","start").style("font-family","sans, georgia, times").style("font-size","0.85em").style("font-weight","normal").style("opacity","0.7").style("stroke","none").text(d=>{if(void 0!==d.graft_dist_sten_pct&&d.graft_dist_sten_pct)return d.graft_dist_sten_pct+" %"}),graft_distal_lesion_drop=graft_lesion_group_enter.append("circle").attr("cx",10).attr("cy",10).attr("r",d=>d.size*mag_size*.5).style("stroke-width",1).style("stroke",d=>{let position=d.graft_dist_sten_pct,stroke;return this.utility.graft_lesion_stroke(position)}).style("fill",d=>{let position=d.graft_dist_sten_pct,fill;return this.utility.graft_lesion_fill(position)}).attr("transform",(d,i)=>{if(""!==d.lesion_x){let x,y,rotate;return"translate("+(d.distal_graft_x+d.size*mag_size*1.4)+","+d.distal_graft_y+")scale(1.5)rotate("+90+")"}}).attr("opacity",d=>void 0!==d.graft_dist_sten_pct&&d.graft_dist_sten_pct?.7:0).attr("cursor","pointer").append("title").text(d=>" Lesion in : "+d.proximal_site),graft_distal_anast_lesion_pct_text=graft_lesion_group_enter.append("text").attr("dx","15px").attr("dy","15px").attr("fill",d=>{let pct;return parseInt(d.graft_dist_anast_sten_pct,10)>50?"#fff":"#939393 "}).attr("x",d=>d.distal_anast_graft_x).attr("y",d=>d.distal_anast_graft_y).attr("text-anchor","start").style("font-family","impact, georgia, times, sans").style("font-size","0.85em").style("font-weight","normal").style("opacity","0.7").style("stroke","none").text(d=>{if(void 0!==d.graft_dist_anast_sten_pct&&d.graft_dist_anast_sten_pct)return d.graft_dist_anast_sten_pct+" %"}),graft_distal_anast_lesion_drop=graft_lesion_group_enter.append("circle").attr("cx",10).attr("cy",10).attr("r",d=>d.size*mag_size*.5).style("stroke-width",1).style("stroke",d=>{let position=d.graft_dist_anast_sten_pct,stroke;return this.utility.graft_lesion_stroke(position)}).style("fill",d=>{let position=d.graft_dist_anast_sten_pct,fill;return this.utility.graft_lesion_fill(position)}).attr("transform",(d,i)=>{if(""!==d.distal_anast_graft_x){let x,y,rotate;return"translate("+(d.distal_anast_graft_x+d.size*mag_size*1.4)+","+d.distal_anast_graft_y+")scale(1.5)rotate("+90+")"}}).attr("opacity",d=>void 0!==d.graft_dist_anast_sten_pct&&d.graft_dist_anast_sten_pct?.7:0).attr("cursor","pointer").append("title").text(d=>" Lesion in : "+d.proximal_site)}}class Draw_t_grafts_lesions{constructor(){this.utility=new Utility}show_t_graft_lesions(bullets_group){let c10=d3.scaleOrdinal(d3.schemeCategory10),graft_lesions_data=get_draw_t_grafts_template(),graft_lesion_group,graft_lesion_group_enter=bullets_group.append("g").selectAll("g").attr("id","t_graft_lesions_group").data(graft_lesions_data).enter().append("g").attr("id","t_graft_lesion_group_enter"),t_graft_lesion_ostial_drop=graft_lesion_group_enter.append("circle").attr("cx",15).attr("cy",10).attr("r",d=>d.size*mag_size*.4).style("stroke-width",1).style("stroke",d=>{let position=d.graft_ostial_sten_pct,stroke;return this.utility.graft_lesion_stroke(position)}).style("fill",d=>{let position=d.graft_ostial_sten_pct,fill;return this.utility.graft_lesion_fill(position)}).attr("transform",(d,i)=>{if(""!==d.ostial_graft_x){let x,y,rotate;return"translate("+(d.ostial_graft_x+d.size*mag_size*1.4)+","+d.ostial_graft_y+")scale(1.5)rotate("+90+")"}}).attr("opacity",d=>void 0!==d.graft_ostial_sten_pct&&d.graft_ostial_sten_pct?.7:0).attr("cursor","pointer").on("click",d=>(d3.event.preventDefault(),this.on_t_graft_lesion_click)).append("title").text(d=>" Lesion in Ostium of  T-Graft From: "+d.proximal_site),t_graft_ostial_lesion_pct_text=graft_lesion_group_enter.append("text").attr("dx","15px").attr("dy","25px").attr("fill",d=>{let pct;return parseInt(d.graft_ostial_sten_pct,10)>50?"#fff":"#939393 "}).attr("x",d=>d.ostial_graft_x).attr("y",d=>d.ostial_graft_y).attr("text-anchor","start").style("font-family","sans, georgia, times").style("font-size","0.85em").style("font-weight","normal").style("opacity","0.7").style("stroke","none").attr("cursor","pointer").text(d=>{if(void 0!==d.graft_ostial_sten_pct&&d.graft_ostial_sten_pct)return d.graft_ostial_sten_pct+" %"}),t_graft_lesion_prox_drop=graft_lesion_group_enter.append("circle").attr("cx",15).attr("cy",10).attr("r",d=>d.size*mag_size*.4).style("stroke-width",1).style("stroke",d=>{let position=d.graft_prox_sten_pct,stroke;return this.utility.graft_lesion_stroke(position)}).style("fill",d=>{let position=d.graft_prox_sten_pct,fill;return this.utility.graft_lesion_fill(position)}).attr("transform",(d,i)=>{if(""!==d.proximal_graft_x){let x,y,rotate;return"translate("+(d.proximal_graft_x+d.size*mag_size*1.4)+","+d.proximal_graft_y+")scale(1.5)rotate("+90+")"}}).attr("opacity",d=>void 0!==d.graft_prox_sten_pct&&d.graft_prox_sten_pct?.7:0).attr("cursor","pointer").append("title").text(d=>" Proximal Lesion in  T-Graft From: "+d.proximal_site),t_graft_prox_lesion_pct_text=graft_lesion_group_enter.append("text").attr("dx","15px").attr("dy","25px").attr("fill",d=>{let pct;return parseInt(d.graft_prox_sten_pct,10)>50?"#fff":"#939393 "}).attr("x",d=>d.proximal_graft_x).attr("y",d=>d.proximal_graft_y).attr("text-anchor","start").style("font-family","sans, georgia, times").style("font-size","0.85em").style("font-weight","normal").style("opacity","0.7").style("stroke","none").text(d=>{if(void 0!==d.graft_prox_sten_pct&&d.graft_prox_sten_pct)return d.graft_prox_sten_pct+" %"}),t_graft_lesion_mid_drop=graft_lesion_group_enter.append("circle").attr("cx",15).attr("cy",10).attr("r",d=>d.size*mag_size*.4).style("stroke-width",1).style("stroke",d=>{let position=d.graft_mid_sten_pct,stroke;return this.utility.graft_lesion_stroke(position)}).style("fill",d=>{let position=d.graft_mid_sten_pct,fill;return this.utility.graft_lesion_fill(position)}).attr("transform",(d,i)=>{if(""!==d.mid_graft_x){let x,y,rotate;return"translate("+(d.mid_graft_x+d.size*mag_size*1.4)+","+d.mid_graft_y+")scale(1.5)rotate("+90+")"}}).attr("opacity",d=>void 0!==d.graft_mid_sten_pct&&d.graft_mid_sten_pct?.7:0).attr("cursor","pointer").append("title").text(d=>" Mid Lesion in  T-Graft From: "+d.proximal_site),t_graft_mid_lesion_pct_text=graft_lesion_group_enter.append("text").attr("dx","15px").attr("dy","25px").attr("fill",d=>{let pct;return parseInt(d.graft_mid_sten_pct,10)>50?"#fff":"#939393 "}).attr("x",d=>d.mid_graft_x).attr("y",d=>d.mid_graft_y).attr("text-anchor","start").style("font-family","sans, georgia, times").style("font-size","0.85em").style("font-weight","normal").style("opacity","0.7").style("stroke","none").text(d=>{if(void 0!==d.graft_mid_sten_pct&&d.graft_mid_sten_pct)return d.graft_mid_sten_pct+" %"}),t_graft_lesion_distal_drop=graft_lesion_group_enter.append("circle").attr("cx",15).attr("cy",10).attr("r",d=>d.size*mag_size*.4).style("stroke-width",1).style("stroke",d=>{let position=d.graft_dist_sten_pct,stroke;return this.utility.graft_lesion_stroke(position)}).style("fill",d=>{let position=d.graft_dist_sten_pct,fill;return this.utility.graft_lesion_fill(position)}).attr("transform",(d,i)=>{if(""!==d.distal_graft_x){let x,y,rotate;return"translate("+(d.distal_graft_x+d.size*mag_size*1.4)+","+d.distal_graft_y+")scale(1.5)rotate("+90+")"}}).attr("opacity",d=>void 0!==d.graft_dist_sten_pct&&d.graft_dist_sten_pct?.7:0).attr("cursor","pointer").append("title").text(d=>" Distal  Lesion in  T-Graft From: "+d.proximal_site),t_graft_distal_lesion_pct_text=graft_lesion_group_enter.append("text").attr("dx","15px").attr("dy","25px").attr("fill",d=>{let pct;return parseInt(d.graft_dist_sten_pct,10)>50?"#fff":"#939393 "}).attr("x",d=>d.distal_graft_x).attr("y",d=>d.distal_graft_y).attr("text-anchor","start").style("font-family","sans, georgia, times").style("font-size","0.85em").style("font-weight","normal").style("opacity","0.7").style("stroke","none").text(d=>{if(void 0!==d.graft_dist_sten_pct&&d.graft_dist_sten_pct)return d.graft_dist_sten_pct+" %"}),t_graft_lesion_distal_anast_drop=graft_lesion_group_enter.append("circle").attr("cx",15).attr("cy",10).attr("r",d=>d.size*mag_size*.4).style("stroke-width",1).style("stroke",d=>{let position=d.graft_dist_anast_sten_pct,stroke;return this.utility.graft_lesion_stroke(position)}).style("fill",d=>{let position=d.graft_dist_anast_sten_pct,fill;return this.utility.graft_lesion_fill(position)}).attr("transform",(d,i)=>{if(""!==d.distal_anast_graft_x){let x,y,rotate;return"translate("+(d.distal_anast_graft_x+d.size*mag_size*1.4)+","+d.distal_anast_graft_y+")scale(1.1)rotate("+90+")"}}).attr("opacity",d=>void 0!==d.graft_dist_anast_sten_pct&&d.graft_dist_anast_sten_pct?.7:0).attr("cursor","pointer").append("title").text(d=>" Distal Anastomotic  Lesion in  T-Graft From: "+d.proximal_site),t_graft_distal_anast_lesion_pct_text=graft_lesion_group_enter.append("text").attr("dx","15px").attr("dy","25px").attr("fill",d=>{let pct;return parseInt(d.graft_dist_anast_sten_pct,10)>50?"#fff":"#939393 "}).attr("x",d=>d.distal_anast_graft_x).attr("y",d=>d.distal_anast_graft_y).attr("text-anchor","start").style("font-family","sans, georgia, times").style("font-size","0.85em").style("font-weight","normal").style("opacity","0.7").style("stroke","none").text(d=>{if(void 0!==d.graft_dist_anast_sten_pct&&d.graft_dist_anast_sten_pct)return d.graft_dist_anast_sten_pct+" %"}),on_t_graft_lesion_click=graft_lesion_group_enter.on("click",d=>{d3.select("#"+d.t_graft_lesion_group_enter).transition().duration(4e3).attr("cx",920)})}}class Draw_t_grafts{constructor(){this.utility=new Utility}show_t_grafts(bullets_group){let graft_data=get_draw_t_grafts_template(),graft_group,graft_group_enter=bullets_group.append("g").selectAll("g").attr("id","graft_group").data(graft_data).enter().append("g").attr("id","graft_group_enter"),t_graft_graft_paths=graft_group_enter.append("path").attr("id",d=>d.cath_graft_prox_site+"_t_graft_paths").attr("d",d=>{let graft_path;if(""!==d.graft_path)return d.graft_path}).attr("stroke-width",d=>d.size*mag_size*.6).style("stroke","url(#vessel_gradient)").style("fill","none").style("stroke-linecap","round").style("stroke-join","bevel").attr("opacity",d=>.6).attr("cursor","pointer").append("title").text(d=>" Graft From: "+d.proximal_site+" To: "+d.cath_graft_segments_cdisc+" Type: "+d.cath_graft_conduit_type),t_graft_over=graft_group_enter.on("mouseover",d=>{d3.select("#"+d.cath_graft_prox_site+"_t_graft_paths").transition().duration(2500).attr("opacity",d=>.9).attr("stroke-width",d=>d.size*mag_size*.8).style("stroke","url(#symbol_gradient)").attr("cursor","pointer")}),t_graft_out=graft_group_enter.on("mouseout",d=>{d3.select("#"+d.cath_graft_prox_site+"_t_graft_paths").transition().attr("opacity",d=>.6).duration(500).attr("stroke-width",d=>d.size*mag_size*.6).style("stroke","url(#vessel_gradient)").attr("cursor","default")})}show_t_graft_segments(bullets_group){let c10=d3.scaleOrdinal(d3.schemeCategory10),graft_data=get_draw_t_grafts_template(),graft_group,graft_group_enter=bullets_group.append("g").selectAll("g").attr("id","graft_group").data(graft_data).enter().append("g").attr("id","graft_group_enter"),t_graft_ostial_mark=graft_group_enter.append("ellipse").attr("cx",d=>d.ostial_graft_x).attr("cy",d=>d.ostial_graft_y).attr("rx",d=>d.size*mag_size*2.7).attr("ry",d=>d.size*mag_size*.3).attr("fill","none").attr("stroke",c10(1)).attr("stroke-widh",d=>d.size*mag_size*1.5).attr("opacity",.7).attr("cursor","pointer").append("title").text(d=>" Ostial T-Graft  Segement"),t_graft_prox_mark=graft_group_enter.append("ellipse").attr("cx",d=>d.proximal_graft_x).attr("cy",d=>d.proximal_graft_y).attr("rx",d=>d.size*mag_size*2.6).attr("ry",d=>d.size*mag_size*.3).attr("fill","none").attr("stroke",c10(2)).attr("stroke-widh",d=>d.size*mag_size*.5).attr("opacity",.7).attr("cursor","pointer").append("title").text(d=>" T-Graft Segment: Start of PROXIMAL 1/3 of Graft Lenght"),mid_mark=graft_group_enter.append("ellipse").attr("cx",d=>d.mid_graft_x).attr("cy",d=>d.mid_graft_y).attr("rx",d=>d.size*mag_size*2.5).attr("ry",d=>d.size*mag_size*.3).attr("fill","none").attr("stroke",c10(3)).attr("stroke-widh",d=>d.size*mag_size*.5).attr("opacity",.7).attr("cursor","pointer").append("title").text(d=>" T-Graft Segment: Start of MID 1/3 of Graft Lenght"),t_graft_distal_mark=graft_group_enter.append("ellipse").attr("id",d=>{d.id}).attr("cx",d=>d.distal_graft_x).attr("cy",d=>d.distal_graft_y).attr("rx",d=>d.size*mag_size*2.5).attr("ry",d=>d.size*mag_size*.3).attr("fill","none").attr("stroke",c10(4)).attr("stroke-widh",d=>d.size*mag_size*.5).attr("opacity",.7).attr("cursor","pointer").append("title").text(d=>" Graft Segment: Start of DISTAL 1/3 of Graft Lenght"),t_graft_distal_mark_over=graft_group_enter.on("mouseover",d=>{d3.select("#distal_mark_"+d.id).transition().attr("stroke-width",120).duration(1500).style("stroke","#d01c8b").style("fill","#d01c8b").attr("cursor","pointer")}),t_graft_distal_anast_mark=graft_group_enter.append("ellipse").attr("cx",d=>d.distal_anast_graft_x).attr("cy",d=>d.distal_anast_graft_y).attr("rx",d=>d.size*mag_size*2.4).attr("ry",d=>d.size*mag_size*.3).attr("fill","none").attr("stroke",c10(5)).attr("stroke-widh",d=>d.size*mag_size*.5).attr("opacity",.7).attr("cursor","pointer").append("title").text(d=>" T-Graft Segment: DISTAL Anastomotic POSITION")}}class Prepare_grafts_data{constructor(){this.utility=new Utility,this.grafts_db_data=get_db_grafts_data(),this.g=new Cor_tree_grafts}set_draw_grafts(){let g_template=this.g.set_graph();for(let i=0;i<this.grafts_db_data.length;i++){let grafts_db_data_i=this.grafts_db_data[i],node=grafts_db_data_i.cath_graft_prox_site.trim(),node_exists;if(!0===g_template.hasNode(node)){let attributes=g_template.getNodeAttributes(node);this.make_draw_grafts_template(grafts_db_data_i,attributes)}}}make_draw_grafts_template(db_data,template){template.cath_graft_segments_cdisc=db_data.cath_graft_segments_cdisc,template.cath_graft_conduit_type=db_data.cath_graft_conduit_type;let ostial_graft_path=template.prox_path;if(""!==ostial_graft_path){let ostial_points=this.utility.path_to_points(ostial_graft_path),ostial_p_x=ostial_points.x,ostial_p_y=ostial_points.y;template.ostial_graft_x=ostial_p_x,template.ostial_graft_y=ostial_p_y}let distal_anast_path=this.utility.find_distal_anast_path(db_data.cath_graft_segments_cdisc);template.distal_anast_path=distal_anast_path;let anast_points=this.utility.path_to_points(distal_anast_path),anast_p_x=anast_points.x,anast_p_y=anast_points.y;template.distal_anast_graft_x=anast_p_x,template.distal_anast_graft_y=anast_p_y,draw_grafts_template.push(template)}}class Prepare_t_grafts_data{constructor(){this.utility=new Utility,this.grafts_db_data=get_db_grafts_data(),this.grafts_template=get_grafts_template(),this.t_grafts_template=get_t_grafts_template(),this.calc=new Calc_paths}set_draw_t_grafts(){let t_keys=Object.keys(this.t_grafts_template);for(const t_key of t_keys){let t_key_i=this.t_grafts_template[t_key];for(let i=0;i<this.grafts_db_data.length;i++){let db_data_i=this.grafts_db_data[i];db_data_i.cath_graft_prox_site.trim()==t_key_i.cath_graft_prox_site&&this.make_draw_t_grafts_template(db_data_i,t_key_i)}}}make_draw_t_grafts_template(db_data,template){template.cath_graft_segments_cdisc=db_data.cath_graft_segments_cdisc;let distal_seg_name=template.cath_graft_segments_cdisc,parent_graft=template.graft,graft_id=template.cath_graft_prox_site;template.cath_graft_conduit_type=db_data.cath_graft_conduit_type,template.graft_ostial_sten_pct=db_data.graft_ostial_sten_pct,template.graft_prox_sten_pct=db_data.graft_prox_sten_pct,template.graft_mid_sten_pct=db_data.graft_mid_sten_pct,template.graft_dist_sten_pct=db_data.graft_dist_sten_pct,template.graft_dist_anast_sten_pct=db_data.graft_dist_anast_sten_pct;let distal_path=this.utility.find_distal_anast_path(distal_seg_name),proximal_path=this.find_proximal_t_graft_path(parent_graft);void 0===proximal_path&&proximal_path&&(this.utility.message(" A T-graft Origin is not Correct "),alert("No Parent Graft. T grafts is not going to be draw "));let proximal_points=this.utility.path_to_points(proximal_path),distal_points=this.utility.path_to_points(distal_path),t_graft_points=this.calc.build_t_graft_points(template,graft_id,proximal_path,distal_path),line,t_graft_path=d3.line().x(d=>d.x).y(d=>d.y).curve(d3.curveNatural)(t_graft_points);template.graft_path=t_graft_path,draw_t_grafts_template.push(template)}find_proximal_t_graft_path(cor_segment){let draw_grafts_template=get_draw_grafts_template();for(let i=0;i<draw_grafts_template.length;i++)if(draw_grafts_template[i].cath_graft_prox_site==cor_segment)return draw_grafts_template[i].t_graft_origin_path}find_proximal_t_graft_path_2(cor_segment){let draw_grafts_template=get_draw_grafts_template();for(let i=0;i<draw_grafts_template.length;i++)if(draw_grafts_template[i].cath_graft_prox_site==cor_segment)return draw_grafts_template[i].t_graft_origin_path}}class Test_graft_graph{constructor(){this.g=new Cor_tree_grafts}start(){let graph,all_nodes=this.g.set_graph().nodes()}}class Test_graph{constructor(){this.g=new Cor_tree_graph}start(){let graph=this.g.set_graph(),all_nodes=graph.nodes(),all_edges=graph.edges(),neighbors=graph.neighbors("lm_ostium_rcs_course_pa_ao");this.g=new Cor_tree_graph;let nodes=new Array;for(const[source,target,sourceAttributes,targetAttributes,edge,edgeAttributes]of graph.adjacency()){let p_c={parent:source,children:target};nodes.push(p_c)}}}class Test_polygons{constructor(){this.utility=new Utility}test(group){let data=get_draw_n_template(),test_group,group_enter,rca_bullet=group.append("g").selectAll("g").attr("id","symbol_group").data(data).enter().append("g").attr("id","symbol_group_enter").append("circle").attr("cx",d=>{let data_path=d.path,data_poly;return this.utility.path_to_points(data_path).x}).attr("cy",d=>{let data_path=d.path,data_poly;return this.utility.path_to_points(data_path).y}).attr("r",5).style("stroke-width",10).style("stroke","url(#stent_gradient)").style("fill","url(#arterial_gradient)")}}class Main_tree{constructor(vis){this.vis=vis,this.guides=new Guides,this.utility=new Utility;let bullets_group=this.guides.make_bullets(this.vis),prep_natives_data=new Prepare_natives_data,draw_natives=new Draw_natives(this.d3),lesions=new Native_lesions(this.d3),draw_lesion_template=prep_natives_data.make_draw_natives_template(),set_lesion_stenosis=prep_natives_data.set_lesions(),set_graph_x_y=prep_natives_data.set_graph_x_y();draw_natives.make(bullets_group),lesions.draw_lesions(bullets_group);let prep_grafts_data,set_draw_grafts=(new Prepare_grafts_data).set_draw_grafts(),draw_grafts=new Draw_grafts,prep_t_grafts_data;draw_grafts.show_grafts(bullets_group),draw_grafts.show_graft_segments(bullets_group),draw_grafts.show_graft_lesions(bullets_group),(new Prepare_t_grafts_data).set_draw_t_grafts();let draw_t_grafts=new Draw_t_grafts,draw_t_grafts_lesions,prep_symbols_data,append_symbols;draw_t_grafts.show_t_grafts(bullets_group),draw_t_grafts.show_t_graft_segments(bullets_group),(new Draw_t_grafts_lesions).show_t_graft_lesions(bullets_group),(new Prepare_symbols_data).set_data(),new Append_symbols(this.d3).append_draw_symbol(bullets_group);let collateral=new Prepare_collaterals_data,lv_model;collateral.make_col_paths(),collateral.draw_collaterals(bullets_group),new LvSegModel(d3).make_rings(bullets_group),this.utility.message("Visualization Of Coronary Angio. Is Only a Sketh... ")}}class Append_symbols{constructor(d3){this.d3=d3,this.utility=new Utility}append_draw_symbol(group){let c10=d3.scaleOrdinal(d3.schemeCategory10),symbol_data=get_draw_symbols_template(),symbol_group,symbol_group_enter,symbols_paths=group.append("g").selectAll("g").attr("id","symbol_group").data(symbol_data).enter().append("g").attr("id","symbol_group_enter").append("path").attr("id",d=>"symbols_paths_"+d.id).attr("cursor","pointer").attr("d",d=>{let path;return d.path}).attr("stroke-width",d=>d.size*mag_size*.8).style("stroke","yellow").style("fill","white").attr("opacity",d=>.7).attr("transform",(d,i)=>{if(""!==d.lesion_x){let x,y;return"translate("+(d.lesion_x-6*i*1.4)+","+(d.lesion_y+5)+")scale(0.9)rotate(5)"}}).attr("cursor","pointer").append("title").text(d=>" Symbol For : "+d.description+" In "+d.id)}}class Utility{constructor(){this.g=new Cor_tree_graph,this.graph=this.g.set_graph()}show_rain_drop(r){let drop;return"M"+r+",0A"+r+","+r+" 0 1,1 "+-r+",0C"+-r+","+-r+" 0,"+-r+" 0,"+-3*r+"C0,"+-r+" "+r+","+-r+" "+r+",0Z"}make_polygon(sides,size,radius,center){let circle,angle=2*Math.PI/sides,points=[];for(i in[(0).sides-1])x=Math.cos(angle*i)*size+center[0],y=Math.sin(angle*i)*size+center[1],points[i]={x:x,y:y,r:radius};return points}make_circle_xy(angle,radius){let points=[],x,y;return points={x:Math.cos(angle)*radius,y:Math.sin(angle)*radius}}circumference_point(center_x,center_y,radius){let t=90,point=[],x_calc=radius*Math.cos(t)+center_x,y_calc=radius*Math.sin(t)+center_y;return point.push({x:x_calc,y:y_calc}),point[0]}find_distal_anast_path(cor_segment){let attr_segment,lesion_path;return this.graph.getNodeAttributes(cor_segment).lesion_path}graft_lesion_stroke(position){if(void 0!==position&&position)return"red"}graft_lesion_fill(position){if(void 0!==position&&position)return"url(#symbol_gradient)"}test_use(group){let info_rect=group.append("svg:rect").attr("id","axis_info_rect").attr("width",7).attr("height",7).attr("rx",1.5).attr("ry",1.5).style("cursor","pointer").style("opacity",1),defs_rect_xy=this.circle_xy(-135,16),defs_rect=group.append("use").attr("xlink:href","#axis_info_rect").attr("id","defs_rect").attr("x",defs_rect_xy.x).attr("y",defs_rect_xy.y).style("stroke","#417DC1").style("fill","url(#symbol_gradient)")}circle_xy(angle,radius){let points=[],x,y;return points={x:Math.cos(angle)*radius,y:Math.sin(angle)*radius}}lesion_text(group,text){group.append("text").attr("dx","15px").attr("dy","15px").attr("fill","white").attr("text-anchor","start").style("font-family","sans, georgia, times").style("font-size","0.85em").style("font-weight","normal").style("opacity","0.75").style("stroke","none").text(d=>text+" %")}build_grid(group){let grid;new Background_grid(this.d3).set_grid(group)}path_to_points(path){if(""!=path){let str_path=path.toString(),a_path,points,points_0=toPoints({type:"path",d:str_path})[0];return{x:points_0.x,y:points_0.y}}}path_to_all_points(path){let str_path=path.toString(),a_path,points;return toPoints({type:"path",d:str_path})}draw_side_symbols(group){this.symbols=get_symbols();const start_y=10,start_x=10,height=70,width=50,step=70;let transform_to=()=>"translate(10,100) scale(1)",rect_g,symbols_group,symbols_group_enter=group.append("g").attr("transform","translate(800, -30)").append("g").selectAll("g").attr("id","symbols_group_g").data(symbols).enter().append("g").attr("id","symbols_group_enter"),symbols_paths=symbols_group_enter.append("path").attr("id",d=>"symbols_"+d.id).attr("class",(d,i)=>"symbols").attr("cursor","pointer").attr("d",d=>{let path;return d.path}).attr("stroke-width",d=>d.size*mag_size*1.2).style("stroke","white").style("fill","none").attr("opacity",d=>.9).attr("transform",(d,i)=>"translate(0,"+50*i*2+")scale(2)rotate(5)").attr("cursor","pointer").append("title").text(d=>" Symbol: "+d.description_name),over=symbols_group_enter.on("mouseover",d=>{d3.select("#symbols_"+d.id).transition().duration(1500).attr("stroke-width",d=>d.size*mag_size*4).style("stroke","#D6FF5C").attr("cursor","pointer")}),out=symbols_group_enter.on("mouseout",d=>{d3.select("#symbols_"+d.id).transition().duration(500).attr("stroke-width",d=>d.size*mag_size*2).style("stroke","url(#symbol_gradient)").attr("cursor","default")})}show_xy(){let x=null;var y=null;let coordinates=d3.mouse(this);x=coordinates[0],y=coordinates[1]}message(a_text){this.d3=d3;let group_i=this.d3.select(".info_message"),remove_text,area_g;this.d3.select("#info_text_draw_text").remove(),group_i.append("g").append("text").attr("x",30).attr("y",10).attr("dy",".35em").attr("id","info_text_draw_text").attr("text-anchor","middle").style("font-size","0.95em").style("font-weight","normal").style("fill","#000").attr("transform","rotate(0)").text(a_text)}show_rain_drop(r){let drop;return"M"+r+",0A"+r+","+r+" 0 1,1 "+-r+",0C"+-r+","+-r+" 0,"+-r+" 0,"+-3*r+"C0,"+-r+" "+r+","+-r+" "+r+",0Z"}update_gg_graph(graph){let graft2draw=get_draw_grafts_template();for(let i=0;i<this.graft2draw.length;i++){let data_i=this.graft2draw[i],data_i_id=data_i.cath_graft_prox_site;for(let prop in data_i)""!==prop&&graph.setNodeAttribute(data_i_id,prop,data_i[prop])}return graph}}class Marker_2{constructor(){}present(){let marker=d3.select("svg").append("defs").append("marker").attr("id","Triangle").attr("refX",12).attr("refY",6).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",18).attr("orient","auto").append("path").attr("d","M 0 0 12 6 0 12 3 6")}}class Marker{make(group){let utility=new Utility,marker_def;group.append("defs").append("svg:marker").attr("id","marker_arrow").attr("viewBox","-6 -6 12 12").attr("refX",0).attr("refY",0).attr("markerWidth",5).attr("markerHeight",5).attr("markerUnits","strokeWidth").attr("orient","auto").append("polygon").attr("points","-2,0 -5,5 5,0 -5,-5").style("fill","red").style("stroke","yellow").style("stroke-width",1).style("opacity",.5),group.append("polyline").attr("points","100,-10,50,-10,0,0").attr("stroke-width",2).attr("stroke","yellow").attr("fill","none").attr("marker-end","url(#marker_arrow)").attr("marker-start","url(#marker_arrow)");let circle_xy=utility.make_circle_xy(290,16);group.append("circle").attr("cx",circle_xy.x).attr("cy",circle_xy.y).attr("r",10).attr("fill","url(#frame_gradient)").attr("stroke","url(#stent_gradien)").attr("opacity",.7)}}class Guides{constructor(){this.utility=new Utility,this.property=new Segment_property(d3),this.native_data=new Prepare_natives_data}make_bullets(svg){let margin_top,margin_right,margin_bottom,margin_left,width=1100-50-20,height=1300-30-30,start_x=25,start_y=25,rca_ostium_x=275.625,rca_ostium_y=474.23721,lm_ostium_x=305.625,lm_ostium_y=449.23721,rect1=svg.append("rect").attr("id","frame_element").attr("class","frame_element_grid").attr("x",25).attr("y",25).attr("rx",12.5).attr("ry",12.5).attr("width",width).attr("height",height).attr("stroke-width",15).style("stroke","url(#frame_gradient)"),rect2=svg.append("rect").attr("id","frame_element").attr("x",35).attr("y",35).attr("rx",6.125).attr("ry",6.125).attr("width",width-20).attr("height",height-20).attr("stroke-width",12).style("stroke","#8b8589"),rect3=svg.append("rect").attr("id","frame_element").attr("x",45).attr("y",45).attr("rx",3.63).attr("ry",3.63).attr("width",width-40).attr("height",height-40).attr("stroke-width",7).style("stroke","#636363"),bullets_group=svg.append("g").attr("transform","translate(150, 150)"),bullets_color=this.property.color_gradient(bullets_group),dominance=get_db_dominance(),text=svg.append("text").attr("dx","500px").attr("dy","95px").attr("fill","url(#frame_gradient)").attr("text-anchor","middle").style("font-family","sans, georgia, times").style("font-size","1.2em").style("font-weight","normal").style("opacity","0.9").style("stroke","none").text(" 2D Coronary Sketch. Segments as per CDISC. "),db_data=get_db_data(),info_cor_date=db_data.info_coronary.info_cor_date,info_exam_num=db_data.info_coronary.info_exam_num,icd10cm_code_1=db_data.info_coronary.icd10cm_code_1,text_2=svg.append("text").attr("dx","500px").attr("dy","115px").attr("fill","#dbd7d2").attr("text-anchor","middle").style("font-family","sans, georgia, times").style("font-size","0.85em").style("font-weight","normal").style("opacity","0.9").style("stroke","none").text(" Exam Date:  "+info_cor_date+" Lab Number: "+info_exam_num+" ICD10-CM: "+icd10cm_code_1+" Dominace: "+dominance.toUpperCase());return bullets_group}}class Set_sketch{constructor(){}svg(){let container,svg=d3.select("#draw_info_coronary_canvas").append("svg");return svg.attr("id","main_svg"),svg.attr("class","main_svg"),svg.attr({width:"100%",height:"100%"}),svg.attr("viewBox","0 0 1100 1300"),svg.attr("preserveAspectRatio","xMidYMid meet"),svg.attr("pointer-events","all"),svg.style("margin-left","0%"),svg.style("margin-right","0%"),svg.style("margin-top","0%"),svg.style("margin-bottom","0%"),svg.style("background-color","#000"),svg.style("cursor","move"),svg.style("shape-rendering","crispEdges"),svg.call(this.zoom()),svg}zoom(){let a_zoom;return d3.zoom().on("zoom",(function(){let svg_vis;d3.select("#svg_vis").attr("transform",d3.event.transform)}))}vis(){let svg_vis,vis;return this.svg().append("svg:g").attr("id","svg_vis")}}class Inkscape2json{constructor(){}load_xml(){let my_svg=d3.xml("./cdisc_plain1.svg"),my_xml;return'<?xml version="1.0" encoding="utf-8"?><note importance="high" logged="true">    <title>Happy</title>    <todo>Work</todo>    <todo>Play</todo></note>'}make(){let xml=this.load_xml();var result1=convert.xml2json(xml,{compact:!0,spaces:4}),result2=convert.xml2json(xml,{compact:!1,spaces:4})}}const draw_coronary_init=()=>{const main=new Interface_buttons};draw_coronary_init();