(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["./js/app.js~sat_pressures"],{

/***/ "./js/draw_sat_pres/draw_sat_pres.js":
/*!*******************************************!*\
  !*** ./js/draw_sat_pres/draw_sat_pres.js ***!
  \*******************************************/
/*! exports provided: SetupP5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SetupP5\", function() { return SetupP5; });\n/* harmony import */ var p5_lib_p5_min__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! p5/lib/p5.min */ \"./node_modules/p5/lib/p5.min.js\");\n/* harmony import */ var p5_lib_p5_min__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(p5_lib_p5_min__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n//import p5 from 'p5';\n\nvar TEMPLATE = [{\n  \"name\": \"aortic_pres_sys\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Sys \",\n  \"logo\": \"Aortic Pressure Systolic\",\n  \"value\": \"\",\n  \"pos_x\": 282,\n  \"pos_y\": 260\n}, {\n  \"name\": \"aortic_pres_dias\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"P.Diast \",\n  \"logo\": \"Ao BP Diastolic\",\n  \"value\": \"\",\n  \"pos_x\": 287,\n  \"pos_y\": 280\n}, {\n  \"name\": \"aortic_pres_mean\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Mean \",\n  \"logo\": \"Ao BP Mean\",\n  \"value\": \"\",\n  \"pos_x\": 292,\n  \"pos_y\": 300\n}, {\n  \"name\": \"sao2_ao_root\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2:\",\n  \"logo\": \"Ao Saturation\",\n  \"value\": \"\",\n  \"pos_x\": 303,\n  \"pos_y\": 320\n}, {\n  \"name\": \"lv_pres_sys\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Sys \",\n  \"logo\": \"Left Ventricular Pressure Systolic\",\n  \"value\": \"\",\n  \"pos_x\": 610,\n  \"pos_y\": 565\n}, {\n  \"name\": \"lv_pres_diastolic\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Diast \",\n  \"logo\": \"Left Ventricular Pressure Diastolic\",\n  \"value\": \"\",\n  \"pos_x\": 610,\n  \"pos_y\": 585\n}, {\n  \"name\": \"lv_pres_mean\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Mean \",\n  \"logo\": \"Left Ventricular Pressure Mean\",\n  \"value\": \"\",\n  \"pos_x\": 610,\n  \"pos_y\": 605\n}, {\n  \"name\": \"sao2_lv\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"Sat: \",\n  \"logo\": \"Left Ventricular Saturation\",\n  \"value\": \"\",\n  \"pos_x\": 610,\n  \"pos_y\": 625\n}, {\n  \"name\": \"pcw_pres_mean\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Mean PCW  \",\n  \"logo\": \"Mean PCW Pressure\",\n  \"value\": \"\",\n  \"pos_x\": 690,\n  \"pos_y\": 320\n}, {\n  \"name\": \"sao2_pcw\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"PCW Sat  \",\n  \"logo\": \"PCW Saturation\",\n  \"value\": \"\",\n  \"pos_x\": 699,\n  \"pos_y\": 340\n}, {\n  \"name\": \"pa_pres_sys\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Sys  \",\n  \"logo\": \"Pulmonary Pressure Systolic\",\n  \"value\": \"\",\n  \"pos_x\": 400,\n  \"pos_y\": 340\n}, {\n  \"name\": \"pa_pres_dia\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Diast  \",\n  \"logo\": \"Pulmonary Pressure Diastolic\",\n  \"value\": \"\",\n  \"pos_x\": 398,\n  \"pos_y\": 360\n}, {\n  \"name\": \"pa_pres_mean\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Mean  \",\n  \"logo\": \"Pulmonary Pressure Mean\",\n  \"value\": \"\",\n  \"pos_x\": 398,\n  \"pos_y\": 380\n}, {\n  \"name\": \"sao2_pa\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"Sat \",\n  \"logo\": \"Pulmonary Sat in Main Trunk\",\n  \"value\": \"\",\n  \"pos_x\": 393,\n  \"pos_y\": 400\n}, {\n  \"name\": \"rv_pres_sys\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Sys \",\n  \"logo\": \"RV Pressure Systolic\",\n  \"value\": \"\",\n  \"pos_x\": 480,\n  \"pos_y\": 650\n}, {\n  \"name\": \"rv_pres_dias\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Diast \",\n  \"logo\": \"RV Pressure Diastolic\",\n  \"value\": \"\",\n  \"pos_x\": 480,\n  \"pos_y\": 670\n}, {\n  \"name\": \"rv_pres_mean\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"Mean \",\n  \"logo\": \"RV Pressure Mean\",\n  \"value\": \"\",\n  \"pos_x\": 480,\n  \"pos_y\": 690\n}, {\n  \"name\": \"sao2_rv\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"Sat  \",\n  \"logo\": \" RV Saturation\",\n  \"value\": \"\",\n  \"pos_x\": 480,\n  \"pos_y\": 710\n}, {\n  \"name\": \"ra_pres_mean\",\n  \"measurement\": \"pressure\",\n  \"short_logo\": \"P Mean \",\n  \"logo\": \"RA Pressure Mean\",\n  \"value\": \"\",\n  \"pos_x\": 290,\n  \"pos_y\": 505\n}, {\n  \"name\": \"sao2_ra_high\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2:\",\n  \"logo\": \" RA Saturation High\",\n  \"value\": \"\",\n  \"pos_x\": 175,\n  \"pos_y\": 480\n}, {\n  \"name\": \"sao2_ra_mid\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2:\",\n  \"logo\": \" RA Saturation Mid\",\n  \"value\": \"\",\n  \"pos_x\": 160,\n  \"pos_y\": 545\n}, {\n  \"name\": \"sao2_ra_low\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2:\",\n  \"logo\": \" RA Saturation Low\",\n  \"value\": \"\",\n  \"pos_x\": 170,\n  \"pos_y\": 630\n}, {\n  \"name\": \"sao2_rv_apex\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2:\",\n  \"logo\": \" RV Saturation apex\",\n  \"value\": \"\",\n  \"pos_x\": 550,\n  \"pos_y\": 715\n}, {\n  \"name\": \"sao2_rv_mid\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2:\",\n  \"logo\": \" RV Saturation Mid\",\n  \"value\": \"\",\n  \"pos_x\": 440,\n  \"pos_y\": 600\n}, {\n  \"name\": \"sao2_rv_outflow\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2:\",\n  \"logo\": \" RV Saturation Outflow\",\n  \"value\": \"\",\n  \"pos_x\": 400,\n  \"pos_y\": 575\n}, {\n  \"name\": \"sao2_svc_high\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2:\",\n  \"logo\": \" SVC Saturation High\",\n  \"value\": \"\",\n  \"pos_x\": 170,\n  \"pos_y\": 170\n}, {\n  \"name\": \"sao2_svc_low\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2:\",\n  \"logo\": \" SVC Saturation Low\",\n  \"value\": \"\",\n  \"pos_x\": 170,\n  \"pos_y\": 370\n}, {\n  \"name\": \"sao2_ivc\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2:\",\n  \"logo\": \" SVC Saturation High\",\n  \"value\": \"\",\n  \"pos_x\": 175,\n  \"pos_y\": 710\n}, {\n  \"name\": \"sao2_hepatic_veins\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2 Hepatic Veins:\",\n  \"logo\": \" SVC Saturation Low\",\n  \"value\": \"\",\n  \"pos_x\": 275,\n  \"pos_y\": 775\n}, {\n  \"name\": \"sat_pres_hb\",\n  \"measurement\": \"info\",\n  \"short_logo\": \"Hb: \",\n  \"logo\": \" Hb Value\",\n  \"value\": \"\",\n  \"pos_x\": 570,\n  \"pos_y\": 50\n}, {\n  \"name\": \"syst_ejection_period\",\n  \"measurement\": \"info\",\n  \"short_logo\": \"Sys Eject Period: \",\n  \"logo\": \" Ejection Sys Period\",\n  \"value\": \"\",\n  \"pos_x\": 570,\n  \"pos_y\": 70\n}, {\n  \"name\": \"ventr_dias_filling_period\",\n  \"measurement\": \"info\",\n  \"short_logo\": \"Diast Filling Period: \",\n  \"logo\": \" Ejection Sys Period\",\n  \"value\": \"\",\n  \"pos_x\": 570,\n  \"pos_y\": 90\n}, {\n  \"name\": \"sat_pres_oxygen_consumption\",\n  \"measurement\": \"info\",\n  \"short_logo\": \"VO2: \",\n  \"logo\": \" O2\",\n  \"value\": \"\",\n  \"pos_x\": 570,\n  \"pos_y\": 110\n}, {\n  \"name\": \"uni_qp_qs\",\n  \"measurement\": \"info\",\n  \"short_logo\": \"Qp/Qs \",\n  \"logo\": \" Qp Qs: \",\n  \"value\": \"\",\n  \"pos_x\": 570,\n  \"pos_y\": 130\n}, {\n  \"name\": \"sao2_ao_distal\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"sao2:\",\n  \"logo\": \" Sat \",\n  \"value\": \"\",\n  \"pos_x\": 491,\n  \"pos_y\": 817\n}, {\n  \"name\": \"hepatic_veins_pres\",\n  \"measurement\": \"saturation\",\n  \"short_logo\": \"Hepatic Veins Pres:\",\n  \"logo\": \" Hepatic V Pres\",\n  \"value\": \"\",\n  \"pos_x\": 275,\n  \"pos_y\": 795\n}]; //import 'p5/lib/p5';\n\n/*\nclass P5_start {\n  init() {\n   let start;\n   return start = new p5(function(p){\n     const draw = new Draw();\n     const utility = new Utility();\n     let img = null;\n\n\n     p.setup =  function() {\n        //canvas = p.createCanvas(p.windowWidth, p.windowHeight)\n        const canvas = p.createCanvas(900, 900);\n        canvas.parent('draw_pressures_div');\n        canvas.id('canvas_draw_pressures_div');\n        canvas.style(\"max-width\", \"100%\");\n        img = utility.load_image(p);\n        return p.frameRate(30);\n      };\n\n\n     p.draw = function() {\n      //draw.shape_gl(p)\n      p.clear();\n      return draw.shape(p, img);\n    };\n\n     return p.windowResized = () =>\n       //p.resizeCanvas(p.windowWidth, p.windowHeight)\n       p.resizeCanvas(900, 900)\n     ;\n   });\n }\n}\nâ€¨\n///////////////////\nclass Utility {\n  load_image(p) {\n        const url = 'http://localhost:4000/images/cath_heart.jpg';\n        const img = p.loadImage(url);\n        //p.image(img, 0, p.height/2, img.width/2, img.height/2);\u0001\n        return img;\n      }\n}\n\nclass Grid {\n  show(p) {\n    p.push();\n    p.stroke(0);\n    p.strokeWeight(0.5);\n    p.line(0, 200,  p.width, 200);\n    for (let i = 0, end = p.width; i <= end; i += 10) {\n      p.line(0, i, p.width, i);\n    }\n    return p.pop();\n  }\n}\nclass Finding {\n  over_element(p, t) {\n      const value_width = p.textWidth(t.value);\n      const logo_width = p.textWidth(t.short_logo);\n      const text_width =  value_width +  logo_width + 30;\n\n\n      if ((p.mouseX >= t.pos_x) && (p.mouseX <= (t.pos_x + text_width)) && (p.mouseY >= t.pos_y) && (p.mouseY <= (t.pos_y+20))) {\n         p.fill(252,141,89);\n         p.textSize(14);\n         p.textStyle(p.BOLD);\n\n         p.push();\n         p.fill(255,255,191);\n         //p.stroke(255,127,0)\n         //p.strokeWeight(1)\n         p.rectMode(p.CORNER);\n         p.rect(t.pos_x-2, t.pos_y-2, text_width, 18 );\n         return p.pop();\n\n      } else {\n         p.fill(0);\n         return p.textSize(12);\n     }\n  }\n\n  pressure(p, t) {\n      p.push();\n      p.noStroke();\n      p.textAlign(p.LEFT, p.TOP);\n      const change = this.over_element(p,t);\n      const text_value = p.text(t.short_logo + \"\" +t.value, t.pos_x, t.pos_y);\n      return p.pop();\n  }\n\n\n  info(p, t) {\n\n      p.push();\n      p.noStroke();\n      p.textAlign(p.LEFT, p.TOP);\n      const change = this.over_element(p,t);\n      const text_value = p.text(t.short_logo + \"\" +t.value, t.pos_x, t.pos_y);\n      return p.pop();\n  }\n\n\n\n\n\n  saturation(p, t) {\n      p.push();\n      p.noStroke();\n      p.textAlign(p.LEFT, p.TOP);\n      const change = this.over_element(p,t);\n      const text_value = p.text(t.short_logo + \" \" +t.value + \"\", t.pos_x, t.pos_y);\n      return p.pop();\n  }\n}\n\n      //p.push()\n      //p.noFill()\n      //text_width = p.textWidth(t.value)\n      //p.pop()\n\n//////////////////\n//\n//â€¨\n\nvar Draw = (function() {\n    let grid = undefined;\n    let finding = undefined;\n    Draw = class Draw {\n      static initClass() {\n          grid = new Grid();\n\n          finding = new Finding();\n      }\n\n      shape_gl(p) {\n            const mouse = [p.mouseX, p.mouseY];\n            const last_mouse = [p.pmouseX, p.pmouseY];\n            p.translate(-250 * 2.5, 0, 0);\n            p.normalMaterial();\n            p.push();\n            p.rotateZ(p.frameCount * 0.01);\n            p.rotateX(p.frameCount * 0.01);\n            p.rotateY(p.frameCount * 0.01);\n            p.plane(180);\n            p.pop();\n            p.translate(250, 0, 0);\n            p.push();\n            p.rotateZ(p.frameCount * 0.01);\n            p.rotateX(p.frameCount * 0.01);\n            p.rotateY(p.frameCount * 0.01);\n            p.box(80, 80, 80);\n            return p.pop();\n        }\n\n      shape(p, img) {\n          p.background(0);\n          p.imageMode(p.CENTER);\n          p.image(img, p.width/2, p.height/2, img.width*2.2, img.height*2.2);\n          p.fill(0, 180, 180);\n          p.stroke(0,0,255);\n          p.fill(102, 153, 0);//green\n          p.strokeWeight(5);\n          p.push();\n          for (let t of Array.from(template)) {\n             if (t.measurement ===  'pressure') {\n                 finding.pressure(p, t);\n             } else if (t.measurement ===  'saturation') {\n                 finding.saturation(p, t);\n             } else if (t.measurement ===  'info') {\n                 finding.info(p, t);\n              }\n          }\n\n          return p.pop();\n      }\n  };\n    Draw.initClass();\n    return Draw;\n})();\n\nvar Prepare_templates = (function() {\n  let proccess_data = undefined;\n  Prepare_templates = class Prepare_templates {\n    static initClass() {\n\n      proccess_data = function(db_data) {\n\n        let p_p5;\n        const arr_db_data = new Array();\n        for (let k  in db_data['cath_pressures_saturation']) {\n          const v = db_data['cath_pressures_saturation'][k];\n          for (let t of Array.from(template)) {\n            if (k === t.name) {\n              t.value = v;\n            }\n          }\n        }\n\n        const setup = new P5_start();\n        return p_p5 = setup.init();\n      };\n    }\n    constructor(procedures_id, pressures_id) {\n      this.procedures_id = procedures_id;\n      this.pressures_id = pressures_id;\n    }\n\n    init() {\n      return this.get_stored_data();\n    }\n\n\n    get_stored_data() {\n        return $.ajax({\n            type:\"GET\",\n            url:`/cath_procedures/${this.procedures_id}/cath_pressures_saturations/${this.pressures_id}`,\n            //url:'/cath_procedures/' +@cath_procedure_id + '/cor_angio_infos/'+ @info_id,\n            dataType: 'json',\n            success( db_data) {\n               return proccess_data( db_data);\n             }\n            });\n      }\n  };\n  Prepare_templates.initClass();\n  return Prepare_templates;\n})();\n\n//this.remove_pressures = () => jQuery(\"#canvas_draw_pressures_div\").remove();\n\n\nthis.draw_pressures = function(procedures_id, pressures_id) {\n    //this.remove_pressures();\n\n    const prepare = new Prepare_templates(procedures_id, pressures_id);\n    return prepare.init();\n  };\nâ€¨\n*/\n\nvar Grid =\n/*#__PURE__*/\nfunction () {\n  function Grid() {\n    _classCallCheck(this, Grid);\n  }\n\n  _createClass(Grid, [{\n    key: \"show\",\n    value: function show(p) {\n      p.push();\n      p.stroke(0);\n      p.strokeWeight(0.5);\n      p.line(0, 200, p.width, 200);\n\n      for (var i = 0, end = p.width; i <= end; i += 10) {\n        p.line(0, i, p.width, i);\n      }\n\n      return p.pop();\n    }\n  }]);\n\n  return Grid;\n}(); ///////////////////////\n\n\nvar Finding =\n/*#__PURE__*/\nfunction () {\n  function Finding() {\n    _classCallCheck(this, Finding);\n  }\n\n  _createClass(Finding, [{\n    key: \"over_element\",\n    value: function over_element(p, t) {\n      var value_width = p.textWidth(t.value);\n      var logo_width = p.textWidth(t.short_logo);\n      var text_width = value_width + logo_width + 30;\n\n      if (p.mouseX >= t.pos_x && p.mouseX <= t.pos_x + text_width && p.mouseY >= t.pos_y && p.mouseY <= t.pos_y + 20) {\n        // p.fill(90,180,172);//green\n        p.fill(175, 141, 195);\n        p.textSize(16);\n        p.textStyle(p.BOLD);\n        p.push(); //p.fill(245,245,245);//near white\n\n        p.fill(247, 247, 247);\n        p.rectMode(p.CORNER);\n        p.rect(t.pos_x - 2, t.pos_y - 2, text_width, 18);\n        return p.pop();\n      } else {\n        p.fill(0);\n        return p.textSize(12);\n      }\n    }\n  }, {\n    key: \"pressure\",\n    ////////////////\n    value: function pressure(p, t) {\n      p.push();\n      p.noStroke();\n      p.textAlign(p.LEFT, p.TOP);\n      var change = this.over_element(p, t);\n      var text_value = p.text(t.short_logo + \"\" + t.value, t.pos_x, t.pos_y);\n      return p.pop();\n    }\n  }, {\n    key: \"info\",\n    ///////////\n    value: function info(p, t) {\n      p.push();\n      p.noStroke();\n      p.textAlign(p.LEFT, p.TOP);\n      var change = this.over_element(p, t);\n      var text_value = p.text(t.short_logo + \"\" + t.value, t.pos_x, t.pos_y);\n      return p.pop();\n    }\n  }, {\n    key: \"saturation\",\n    ///////\n    value: function saturation(p, t) {\n      p.push();\n      p.noStroke();\n      p.textAlign(p.LEFT, p.TOP);\n      var change = this.over_element(p, t);\n      var text_value = p.text(t.short_logo + \" \" + t.value + \"\", t.pos_x, t.pos_y);\n      return p.pop();\n    }\n  }]);\n\n  return Finding;\n}();\n\n; //class FINDING\n////////////////////////\n\nvar Draw =\n/*#__PURE__*/\nfunction () {\n  function Draw() {//let grid = undefined;\n\n    _classCallCheck(this, Draw);\n  }\n\n  _createClass(Draw, [{\n    key: \"shape\",\n    value: function shape(p, img) {\n      var finding = new Finding(); //p.background(0);\n\n      p.background(\"#eee\");\n      p.imageMode(p.CENTER);\n      p.image(img, p.width / 2, p.height / 2, img.width * 2.2, img.height * 2.2);\n      p.fill(0, 180, 180);\n      p.stroke(0, 0, 255);\n      p.fill(102, 153, 0); //green\n\n      p.strokeWeight(5);\n      /*\n      Show mouse position\n      */\n\n      p.push();\n      p.fill(0);\n      p.noStroke();\n      p.textSize(13);\n      p.textAlign(p.LEFT, p.TOP);\n      p.text(p.ceil(p.mouseX) + \", \" + p.ceil(p.mouseY), p.mouseX + 10, p.mouseY + 10); //p.text(p.ceil(p.mouseX+10) + \", \" + p.ceil(p.mouseY+10), p.mouseX+10, p.mouseY+10);\n\n      p.pop();\n      p.push();\n      p.textSize(20);\n      p.textStyle(p.BOLD);\n\n      for (var _i = 0, _Array$from = Array.from(TEMPLATE); _i < _Array$from.length; _i++) {\n        var t = _Array$from[_i];\n\n        if (t.measurement === 'pressure') {\n          finding.pressure(p, t);\n        } else if (t.measurement === 'saturation') {\n          finding.saturation(p, t);\n        } else if (t.measurement === 'info') {\n          finding.info(p, t);\n        }\n      }\n\n      p.pop();\n    }\n  }]);\n\n  return Draw;\n}(); ///////////////\n\n\nvar Utility =\n/*#__PURE__*/\nfunction () {\n  function Utility() {\n    _classCallCheck(this, Utility);\n  }\n\n  _createClass(Utility, [{\n    key: \"load_image\",\n    value: function load_image(p) {\n      var url = 'http://localhost:4000/images/cath_heart.jpg';\n      var img = p.loadImage(url); //console.log(img)\n      //p.image(img, 0, p.height/2, img.width/2, img.height/2);\n\n      return img;\n    }\n  }]);\n\n  return Utility;\n}();\n\nvar P5_start =\n/*#__PURE__*/\nfunction () {\n  function P5_start() {\n    _classCallCheck(this, P5_start);\n  }\n\n  _createClass(P5_start, [{\n    key: \"init\",\n    value: function init() {\n      var start;\n      return start = new p5_lib_p5_min__WEBPACK_IMPORTED_MODULE_0___default.a(function (p) {\n        var draw = new Draw();\n        var utility = new Utility();\n        var img = null;\n\n        p.setup = function () {\n          var canvas = p.createCanvas(900, 900);\n          canvas.parent('draw_pressures_div');\n          canvas.id('canvas_draw_pressures_div'); //canvas.style(\"max-width\", \"100%\");//gives error\n\n          img = utility.load_image(p);\n          return p.frameRate(30);\n        };\n\n        p.draw = function () {\n          p.clear();\n          return draw.shape(p, img);\n        };\n\n        return p.windowResized = function () {\n          return p.resizeCanvas(900, 900);\n        };\n      });\n    }\n  }]);\n\n  return P5_start;\n}(); //////////////////\n\n\nvar Prepare_data =\n/*#__PURE__*/\nfunction () {\n  function Prepare_data() {\n    _classCallCheck(this, Prepare_data);\n\n    // ready_data = [];\n    this.build_data();\n  }\n\n  _createClass(Prepare_data, [{\n    key: \"build_data\",\n    value: function build_data() {\n      var db_data = SAT_PRES_DATA; // console.log(\"-------------------\")\n      // console.log(JSON.stringify(db_data))\n\n      for (var k in db_data['sat_pressure']) {\n        var v = db_data['sat_pressure'][k];\n\n        for (var _i2 = 0, _Array$from2 = Array.from(TEMPLATE); _i2 < _Array$from2.length; _i2++) {\n          var t = _Array$from2[_i2];\n\n          if (k === t.name) {\n            t.value = v;\n          }\n        }\n      } //console.log(\"TEMPLATE: \" + JSON.stringify(TEMPLATE))\n\n    }\n  }]);\n\n  return Prepare_data;\n}();\n\n//build_data\n; //class\n//////////////////////\n\nvar SetupP5 =\n/*#__PURE__*/\nfunction () {\n  function SetupP5() {\n    _classCallCheck(this, SetupP5);\n\n    this.make_button();\n  }\n\n  _createClass(SetupP5, [{\n    key: \"make_button\",\n    value: function make_button() {\n      var button = document.createElement(\"button\");\n      button.innerHTML = \"Show Sat Pressures Diagram\";\n      button.classList.add(\"large\");\n      button.classList.add(\"expanded\");\n      button.classList.add(\"button\");\n      button.classList.add(\"is-primary\");\n      var draw_div = document.querySelector('#draw_pressures_button_div');\n\n      if (draw_div !== null) {\n        draw_div.appendChild(button);\n        button.addEventListener(\"click\", function () {\n          $(\"#canvas_draw_pressures_div\").remove(); //console.log(\"-------------\")\n\n          var prepare = new Prepare_data();\n          var start = new P5_start();\n          start.init();\n        });\n      }\n\n      ; //if\n    }\n  }]);\n\n  return SetupP5;\n}();\n;\n\nvar draw_sats_init = function draw_sats_init() {\n  //console.log(\"init--satpressures------------\")\n  var main = new SetupP5();\n}; //init();\n\n\ndraw_sats_init();\n\n//# sourceURL=webpack:///./js/draw_sat_pres/draw_sat_pres.js?");

/***/ })

}]);